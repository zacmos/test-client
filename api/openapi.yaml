openapi: 3.0.0
info:
  contact:
    name: Twitter Developers
    url: https://developer.twitter.com/
  description: Twitter API v2 available endpoints
  license:
    name: Twitter Developer Agreement and Policy
    url: https://developer.twitter.com/en/developer-terms/agreement-and-policy.html
  termsOfService: https://developer.twitter.com/en/developer-terms/agreement-and-policy.html
  title: Twitter API v2
  version: latest
servers:
- description: Twitter API
  url: https://api.twitter.com
tags:
- description: Endpoints related to keeping Twitter data in your systems compliant
  externalDocs:
    description: Find out more
    url: https://developer.twitter.com/en/docs/twitter-api/compliance/batch-tweet/introduction
  name: Compliance
- description: Miscellaneous endpoints for general API functionality
  externalDocs:
    description: Find out more
    url: https://developer.twitter.com/en/docs/twitter-api
  name: General
- description: Endpoints related to retrieving, managing Lists
  externalDocs:
    description: Find out more
    url: https://developer.twitter.com/en/docs/twitter-api/lists
  name: Lists
- description: Endpoints related to retrieving, managing Spaces
  externalDocs:
    description: Find out more
    url: https://developer.twitter.com/en/docs/twitter-api/spaces
  name: Spaces
- description: Endpoints related to retrieving, searching, and modifying Tweets
  externalDocs:
    description: Find out more
    url: https://developer.twitter.com/en/docs/twitter-api/tweets/lookup
  name: Tweets
- description: Endpoints related to retrieving, managing relationships of Users
  externalDocs:
    description: Find out more
    url: https://developer.twitter.com/en/docs/twitter-api/users/lookup
  name: Users
paths:
  /2/users:
    get:
      description: This endpoint returns information about users. Specify users by
        their ID.
      operationId: findUsersById
      parameters:
      - description: Required. A list of User IDs, comma-separated. You can specify
          up to 100 IDs.
        example: 2244994945,6253282,12
        explode: false
        in: query
        name: ids
        required: true
        schema:
          items:
            $ref: '#/components/schemas/UserID'
          maxItems: 100
          minItems: 1
          type: array
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [User](#User) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - pinned_tweet_id
          items:
            enum:
            - pinned_tweet_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiUserLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: User lookup by IDs
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/{id}:
    get:
      description: This endpoint returns information about a user. Specify user by
        ID.
      operationId: findUserById
      parameters:
      - description: Required. A User ID.
        example: "2244994945"
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [User](#User) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - pinned_tweet_id
          items:
            enum:
            - pinned_tweet_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleUserLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: User lookup by ID
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/by:
    get:
      description: This endpoint returns information about users. Specify users by
        their username.
      operationId: findUsersByUsername
      parameters:
      - description: Required . A list of usernames, comma-separated. You can specify
          up to 100 usernames.
        example: TwitterDev,TwitterAPI,jack
        explode: false
        in: query
        name: usernames
        required: true
        schema:
          items:
            $ref: '#/components/schemas/UserName'
          maxItems: 100
          minItems: 1
          type: array
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [User](#User) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - pinned_tweet_id
          items:
            enum:
            - pinned_tweet_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiUserLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: User lookup by usernames
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/me:
    get:
      description: This endpoint returns information about the requesting user.
      operationId: findMyUser
      parameters:
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [User](#User) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - pinned_tweet_id
          items:
            enum:
            - pinned_tweet_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleUserLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: User lookup me
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/by/username/{username}:
    get:
      description: This endpoint returns information about a user. Specify user by
        username.
      operationId: findUserByUsername
      parameters:
      - description: Required. A username.
        example: TwitterDev
        explode: false
        in: path
        name: username
        required: true
        schema:
          $ref: '#/components/schemas/UserName'
        style: simple
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [User](#User) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - pinned_tweet_id
          items:
            enum:
            - pinned_tweet_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleUserLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: User lookup by username
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/{id}/blocking:
    get:
      description: Returns a list of users that are blocked by the provided user ID
      operationId: usersIdBlocking
      parameters:
      - description: The ID of the user for whom to return results
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: This value is populated by passing the 'next_token' or 'previous_token'
          returned in a request to paginate through results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          maxLength: 16
          minLength: 16
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericMultipleUsersLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Returns user objects that are blocked by provided user ID
      tags:
      - Twitter
      x-accepts: application/json
    post:
      description: Causes the user (in the path) to block the target user. The user
        (in the path) must match the user context authorizing the request
      operationId: usersIdBlock
      parameters:
      - description: The ID of the user that is requesting to block the target user
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UsersIdBlockRequest'
        content:
          application/json:
            schema:
              example:
                target_user_id: target_user_id
              properties:
                target_user_id:
                  pattern: ^[0-9]{1,19}$
                  title: UsersIdBlockRequestTargetUserId
                  type: string
              required:
              - target_user_id
              title: UsersIdBlockRequest
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersBlockingMutationResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Block User by User ID
      tags:
      - Twitter
      x-contentType: application/json
      x-accepts: application/json
  /2/users/{source_user_id}/blocking/{target_user_id}:
    delete:
      description: Causes the source user to unblock the target user. The source user
        must match the user context authorizing the request
      operationId: usersIdUnblock
      parameters:
      - description: The ID of the user that is requesting to unblock the target user
        explode: false
        in: path
        name: source_user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: The ID of the user that the source user is requesting to unblock
        explode: false
        in: path
        name: target_user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersBlockingMutationResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Unblock User by User ID
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/{source_user_id}/muting/{target_user_id}:
    delete:
      description: Causes the source user to unmute the target user. The source user
        must match the user context authorizing the request
      operationId: usersIdUnmute
      parameters:
      - description: The ID of the user that is requesting to unmute the target user
        explode: false
        in: path
        name: source_user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: The ID of the user that the source user is requesting to unmute
        explode: false
        in: path
        name: target_user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersMutingMutationResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Unmute User by User ID
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/{id}/muting:
    get:
      description: Returns a list of users that are muted by the provided user ID
      operationId: usersIdMuting
      parameters:
      - description: The ID of the user for whom to return results
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: This parameter is used to get the next 'page' of results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericMultipleUsersLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Returns user objects that are muted by the provided user ID
      tags:
      - Twitter
      x-accepts: application/json
    post:
      description: Causes the user (in the path) to mute the target user. The user
        (in the path) must match the user context authorizing the request
      operationId: usersIdMute
      parameters:
      - description: The ID of the user that is requesting to mute the target user
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UsersIdMuteRequest'
        content:
          application/json:
            schema:
              example:
                target_user_id: target_user_id
              properties:
                target_user_id:
                  pattern: ^[0-9]{1,19}$
                  title: UsersIdMuteRequestTargetUserId
                  type: string
              required:
              - target_user_id
              title: UsersIdMuteRequest
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersMutingMutationResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Mute User by User ID
      tags:
      - Twitter
      x-contentType: application/json
      x-accepts: application/json
  /2/users/{id}/followers:
    get:
      description: Returns a list of users that follow the provided user ID
      operationId: usersIdFollowers
      parameters:
      - description: The ID of the user for whom to return results
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: This value is populated by passing the 'next_token' or 'previous_token'
          returned in a request to paginate through results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          maxLength: 16
          minLength: 16
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericMultipleUsersLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Returns user objects that follow the provided user ID
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/by/username/{username}/followers:
    get:
      description: Returns a list of users that follow the provided username
      operationId: usernameFollowers
      parameters:
      - description: The username of the user for whom to return results
        explode: false
        in: path
        name: username
        required: true
        schema:
          $ref: '#/components/schemas/UserName'
        style: simple
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: This value is populated by passing the 'next_token' or 'previous_token'
          returned in a request to paginate through results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          maxLength: 16
          minLength: 16
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericMultipleUsersLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Returns user objects that follow the provided username
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/{id}/following:
    get:
      description: Returns a list of users that are being followed by the provided
        user ID
      operationId: usersIdFollowing
      parameters:
      - description: The ID of the user for whom to return results
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: This value is populated by passing the 'next_token' or 'previous_token'
          returned in a request to paginate through results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          maxLength: 16
          minLength: 16
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersFollowingLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Following by User ID
      tags:
      - Twitter
      x-accepts: application/json
    post:
      description: Causes the user(in the path) to follow, or “request to follow”
        for protected users, the target user. The user(in the path) must match the
        user context authorizing the request
      operationId: usersIdFollow
      parameters:
      - description: The ID of the user that is requesting to follow the target user
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UsersIdFollowRequest'
        content:
          application/json:
            schema:
              example:
                target_user_id: target_user_id
              properties:
                target_user_id:
                  pattern: ^[0-9]{1,19}$
                  title: UsersIdFollowRequestTargetUserId
                  type: string
              required:
              - target_user_id
              title: UsersIdFollowRequest
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersFollowingCreateResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Follow User
      tags:
      - Twitter
      x-contentType: application/json
      x-accepts: application/json
  /2/users/by/username/{username}/following:
    get:
      description: Returns a list of users that being followed by the provided username
      operationId: usernameFollowing
      parameters:
      - description: The username of the user for whom to return results
        explode: false
        in: path
        name: username
        required: true
        schema:
          $ref: '#/components/schemas/UserName'
        style: simple
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: This value is populated by passing the 'next_token' or 'previous_token'
          returned in a request to paginate through results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          maxLength: 16
          minLength: 16
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersFollowingLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Following by username
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/{source_user_id}/following/{target_user_id}:
    delete:
      description: Causes the source user to unfollow the target user. The source
        user must match the user context authorizing the request
      operationId: usersIdUnfollow
      parameters:
      - description: The ID of the user that is requesting to unfollow the target
          user
        explode: false
        in: path
        name: source_user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: The ID of the user that the source user is requesting to unfollow
        explode: false
        in: path
        name: target_user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersFollowingDeleteResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Unfollow User
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/{id}/followed_lists:
    get:
      description: Returns a user's followed Lists.
      operationId: userFollowedLists
      parameters:
      - description: The ID of the user for whom to return results
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: This parameter is used to get a specified 'page' of results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A comma separated list of List fields to display.
        explode: false
        in: query
        name: list.fields
        required: false
        schema:
          description: The fields available for a List object.
          example:
          - created_at
          - description
          - follower_count
          - member_count
          - name
          - private
          items:
            enum:
            - created_at
            - description
            - follower_count
            - id
            - member_count
            - name
            - owner_id
            - private
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [List](#List) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - owner_id
          items:
            enum:
            - owner_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiListResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Get User's Followed Lists
      tags:
      - Twitter
      x-accepts: application/json
    post:
      description: Causes a user to follow a List.
      operationId: listUserFollow
      parameters:
      - description: The ID of the authenticated source user that will follow the
          List
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFollowRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFollowedResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Follow a List
      tags:
      - Twitter
      x-contentType: application/json
      x-accepts: application/json
  /2/users/{id}/followed_lists/{list_id}:
    delete:
      description: Causes a user to unfollow a List.
      operationId: listUserUnfollow
      parameters:
      - description: The ID of the authenticated source user that will unfollow the
          List
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: The ID of the List to unfollow
        explode: false
        in: path
        name: list_id
        required: true
        schema:
          $ref: '#/components/schemas/ListID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFollowedResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Unfollow a List
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/{id}/list_memberships:
    get:
      description: Get a User's List Memberships.
      operationId: getUserListMemberships
      parameters:
      - description: The ID of the user for whom to return results
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: This parameter is used to get a specified 'page' of results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A comma separated list of List fields to display.
        explode: false
        in: query
        name: list.fields
        required: false
        schema:
          description: The fields available for a List object.
          example:
          - created_at
          - description
          - follower_count
          - member_count
          - name
          - private
          items:
            enum:
            - created_at
            - description
            - follower_count
            - id
            - member_count
            - name
            - owner_id
            - private
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [List](#List) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - owner_id
          items:
            enum:
            - owner_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiListResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Get a User's List Memberships
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/{id}/owned_lists:
    get:
      description: Get a User's Owned Lists.
      operationId: listUserOwnedLists
      parameters:
      - description: The ID of the user for whom to return results
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: This parameter is used to get a specified 'page' of results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A comma separated list of List fields to display.
        explode: false
        in: query
        name: list.fields
        required: false
        schema:
          description: The fields available for a List object.
          example:
          - created_at
          - description
          - follower_count
          - member_count
          - name
          - private
          items:
            enum:
            - created_at
            - description
            - follower_count
            - id
            - member_count
            - name
            - owner_id
            - private
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [List](#List) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - owner_id
          items:
            enum:
            - owner_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiListResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Get a User's Owned Lists
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/{id}/pinned_lists:
    get:
      description: Get a User's Pinned Lists.
      operationId: listUserPinnedLists
      parameters:
      - description: The ID of the user for whom to return results
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: A comma separated list of List fields to display.
        explode: false
        in: query
        name: list.fields
        required: false
        schema:
          description: The fields available for a List object.
          example:
          - created_at
          - description
          - follower_count
          - member_count
          - name
          - private
          items:
            enum:
            - created_at
            - description
            - follower_count
            - id
            - member_count
            - name
            - owner_id
            - private
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [List](#List) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - owner_id
          items:
            enum:
            - owner_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiListNoPaginationResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Get a User's Pinned Lists
      tags:
      - Twitter
      x-accepts: application/json
    post:
      description: Causes a user to pin a List.
      operationId: listUserPin
      parameters:
      - description: The ID of the authenticated source user that will pin the List
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPinRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPinnedResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Pin a List
      tags:
      - Twitter
      x-contentType: application/json
      x-accepts: application/json
  /2/users/{id}/pinned_lists/{list_id}:
    delete:
      description: Causes a user to remove a pinned List.
      operationId: listUserUnpin
      parameters:
      - description: The ID of the authenticated source user that will remove the
          pinned List
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: The ID of the List to unpin
        explode: false
        in: path
        name: list_id
        required: true
        schema:
          $ref: '#/components/schemas/ListID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPinnedResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Unpin a List
      tags:
      - Twitter
      x-accepts: application/json
  /2/tweets:
    get:
      description: Returns a variety of information about the Tweet specified by the
        requested ID.
      operationId: findTweetsById
      parameters:
      - description: A comma separated list of Tweet IDs. Up to 100 are allowed in
          a single request.
        explode: false
        in: query
        name: ids
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TweetID'
          maxItems: 100
          minItems: 1
          type: array
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [Tweet](#Tweet) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Media fields to display.
        explode: false
        in: query
        name: media.fields
        required: false
        schema:
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          items:
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Place fields to display.
        explode: false
        in: query
        name: place.fields
        required: false
        schema:
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Poll fields to display.
        explode: false
        in: query
        name: poll.fields
        required: false
        schema:
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiTweetLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Tweet lookup by Tweet IDs
      tags:
      - Twitter
      x-accepts: application/json
    post:
      description: Causes the user to create a tweet under the authorized account.
      operationId: createTweet
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CreateTweetRequest'
        content:
          application/json:
            schema:
              example:
                geo:
                  place_id: place_id
                quote_tweet_id: "1346889436626259968"
                for_super_followers_only: true
                direct_message_deep_link: direct_message_deep_link
                text: Learn how to use the user Tweet timeline and user mention timeline
                  endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
                media:
                  media_ids:
                  - "1146654567674912769"
                  - "1146654567674912769"
                  tagged_user_ids:
                  - "2244994945"
                  - "2244994945"
                poll:
                  duration_minutes: 811
                  options:
                  - null
                  - null
                reply:
                  exclude_reply_user_ids:
                  - "2244994945"
                  - "2244994945"
                  in_reply_to_tweet_id: "1346889436626259968"
                reply_settings: following
              properties:
                text:
                  description: The content of the Tweet.
                  example: Learn how to use the user Tweet timeline and user mention
                    timeline endpoints in the Twitter API v2 to explore Tweet\u2026
                    https:\/\/t.co\/56a0vZUx7i
                  type: string
                direct_message_deep_link:
                  description: Link to take the conversation from the public timeline
                    to a private Direct Message.
                  title: CreateTweetRequestDirectMessageDeepLink
                  type: string
                quote_tweet_id:
                  description: Unique identifier of this Tweet. This is returned as
                    a string in order to avoid complications with languages and tools
                    that cannot handle large integers.
                  example: "1346889436626259968"
                  pattern: ^[0-9]{1,19}$
                  type: string
                for_super_followers_only:
                  description: Exclusive Tweet for super followers.
                  title: CreateTweetRequestForSuperFollowersOnly
                  type: boolean
                reply:
                  $ref: '#/components/schemas/CreateTweetRequestReply'
                media:
                  $ref: '#/components/schemas/CreateTweetRequestMedia'
                poll:
                  $ref: '#/components/schemas/CreateTweetRequestPoll'
                reply_settings:
                  description: Settings to indicate who can reply to the Tweet.
                  enum:
                  - following
                  - mentionedUsers
                  title: CreateTweetRequestReplySettings
                  type: string
                geo:
                  $ref: '#/components/schemas/CreateTweetRequestGeo'
              title: CreateTweetRequest
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetCreateResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Creation of a Tweet
      tags:
      - Twitter
      x-contentType: application/json
      x-accepts: application/json
  /2/tweets/{id}:
    delete:
      description: Delete specified Tweet (in the path) by ID.
      operationId: deleteTweetById
      parameters:
      - description: The ID of the Tweet to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/TweetID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetDeleteResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Tweet delete by Tweet ID
      tags:
      - Twitter
      x-accepts: application/json
    get:
      description: Returns a variety of information about the Tweet specified by the
        requested ID.
      operationId: findTweetById
      parameters:
      - description: A single Tweet ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/TweetID'
        style: simple
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [Tweet](#Tweet) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Media fields to display.
        explode: false
        in: query
        name: media.fields
        required: false
        schema:
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          items:
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Place fields to display.
        explode: false
        in: query
        name: place.fields
        required: false
        schema:
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Poll fields to display.
        explode: false
        in: query
        name: poll.fields
        required: false
        schema:
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleTweetLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Tweet lookup by Tweet ID
      tags:
      - Twitter
      x-accepts: application/json
  /2/tweets/{id}/hidden:
    put:
      description: Hides or unhides a reply to an owned conversation.
      operationId: hideReplyById
      parameters:
      - description: The ID of the reply that you want to hide or unhide.
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/TweetID'
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/HideReplyByIdRequest'
        content:
          application/json:
            schema:
              example:
                hidden: true
              properties:
                hidden:
                  title: HideReplyByIdRequestHidden
                  type: boolean
              title: HideReplyByIdRequest
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HideReplyByIdResponse'
          description: A successful response. The reply has been hidden or unhidden.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Hide replies
      tags:
      - Twitter
      x-contentType: application/json
      x-accepts: application/json
  /2/tweets/search/recent:
    get:
      description: Returns Tweets from the last 7 days that match a search query.
      operationId: tweetsRecentSearch
      parameters:
      - description: One query/rule/filter for matching Tweets. Up to 512 characters.
        explode: true
        in: query
        name: query
        required: true
        schema:
          example: (from:TwitterDev OR from:TwitterAPI) has:media -is:retweet
          maxLength: 512
          minLength: 1
          type: string
        style: form
      - description: YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent
          7 days) from which the Tweets will be provided. Timestamp is in second granularity
          and is inclusive (i.e. 12:00:01 includes the first second of the minute).
        explode: true
        in: query
        name: start_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to
          which the Tweets will be provided. Timestamp is in second granularity and
          is exclusive (i.e. 12:00:01 excludes the first second of the minute).
        explode: true
        in: query
        name: end_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Returns results with a Tweet ID greater than (that is, more recent
          than) the specified ID.
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          $ref: '#/components/schemas/TweetID'
        style: form
      - description: Returns results with a Tweet ID less than (that is, older than)
          the specified ID.
        explode: true
        in: query
        name: until_id
        required: false
        schema:
          $ref: '#/components/schemas/TweetID'
        style: form
      - description: The maximum number of search results to be returned by a request.
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          type: integer
        style: form
      - description: This parameter is used to get the next 'page' of results. The
          value used with the parameter is pulled directly from the response provided
          by the API, and should not be modified.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [Tweet](#Tweet) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Media fields to display.
        explode: false
        in: query
        name: media.fields
        required: false
        schema:
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          items:
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Place fields to display.
        explode: false
        in: query
        name: place.fields
        required: false
        schema:
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Poll fields to display.
        explode: false
        in: query
        name: poll.fields
        required: false
        schema:
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetSearchResponse'
          description: Tweets recent search response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Recent search
      tags:
      - Twitter
      x-accepts: application/json
  /2/tweets/search/all:
    get:
      description: Returns Tweets that match a search query.
      operationId: tweetsFullarchiveSearch
      parameters:
      - description: One query/rule/filter for matching Tweets. Up to 1024 characters.
        explode: true
        in: query
        name: query
        required: true
        schema:
          example: (from:TwitterDev OR from:TwitterAPI) has:media -is:retweet
          maxLength: 1024
          minLength: 1
          type: string
        style: form
      - description: YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp from which the
          Tweets will be provided. Timestamp is in second granularity and is inclusive
          (i.e. 12:00:01 includes the first second of the minute).
        explode: true
        in: query
        name: start_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to
          which the Tweets will be provided. Timestamp is in second granularity and
          is exclusive (i.e. 12:00:01 excludes the first second of the minute).
        explode: true
        in: query
        name: end_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Returns results with a Tweet ID greater than (that is, more recent
          than) the specified ID.
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          $ref: '#/components/schemas/TweetID'
        style: form
      - description: Returns results with a Tweet ID less than (that is, older than)
          the specified ID.
        explode: true
        in: query
        name: until_id
        required: false
        schema:
          $ref: '#/components/schemas/TweetID'
        style: form
      - description: The maximum number of search results to be returned by a request.
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          default: 10
          format: int32
          maximum: 500
          minimum: 10
          type: integer
        style: form
      - description: This parameter is used to get the next 'page' of results. The
          value used with the parameter is pulled directly from the response provided
          by the API, and should not be modified.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [Tweet](#Tweet) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Media fields to display.
        explode: false
        in: query
        name: media.fields
        required: false
        schema:
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          items:
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Place fields to display.
        explode: false
        in: query
        name: place.fields
        required: false
        schema:
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Poll fields to display.
        explode: false
        in: query
        name: poll.fields
        required: false
        schema:
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetSearchResponse'
          description: Tweets full archive search response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
      summary: Full-archive search
      tags:
      - Twitter
      x-accepts: application/json
  /2/tweets/search/stream:
    get:
      description: Streams Tweets matching the stream's active rule set.
      operationId: searchStream
      parameters:
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [Tweet](#Tweet) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Media fields to display.
        explode: false
        in: query
        name: media.fields
        required: false
        schema:
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          items:
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Place fields to display.
        explode: false
        in: query
        name: place.fields
        required: false
        schema:
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Poll fields to display.
        explode: false
        in: query
        name: poll.fields
        required: false
        schema:
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: The number of minutes of backfill requested
        explode: true
        in: query
        name: backfill_minutes
        required: false
        schema:
          format: int32
          maximum: 5
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilteredStreamingTweet'
          description: The request was successful. Successful responses will return
            a stream of individual JSON Tweet payloads.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
      summary: Filtered stream
      tags:
      - Twitter
      x-twitter-streaming: true
      x-accepts: application/json
  /2/tweets/search/stream/rules:
    get:
      description: Returns rules from a user's active rule set. Users can fetch all
        of their rules or a subset, specified by the provided rule ids.
      operationId: getRules
      parameters:
      - description: A comma-separated list of Rule IDs.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            $ref: '#/components/schemas/RuleId'
          type: array
        style: form
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          default: 1000
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: This value is populated by passing the 'next_token' returned
          in a request to paginate through results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          maxLength: 16
          minLength: 16
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRulesResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
      summary: Rules lookup
      tags:
      - Twitter
      x-accepts: application/json
    post:
      description: Add or delete rules from a user's active rule set. Users can provide
        unique, optionally tagged rules to add. Users can delete their entire rule
        set or a subset specified by rule ids or values.
      operationId: addOrDeleteRules
      parameters:
      - description: Dry Run can be used with both the add and delete action, with
          the expected result given, but without actually taking any action in the
          system (meaning the end state will always be as it was when the request
          was submitted). This is particularly useful to validate rule changes.
        explode: true
        in: query
        name: dry_run
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrDeleteRulesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOrDeleteRulesResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
      summary: Add/Delete rules
      tags:
      - Twitter
      x-contentType: application/json
      x-accepts: application/json
  /2/tweets/sample/stream:
    get:
      description: Streams a deterministic 1% of public Tweets.
      operationId: sampleStream
      parameters:
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [Tweet](#Tweet) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Media fields to display.
        explode: false
        in: query
        name: media.fields
        required: false
        schema:
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          items:
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Place fields to display.
        explode: false
        in: query
        name: place.fields
        required: false
        schema:
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Poll fields to display.
        explode: false
        in: query
        name: poll.fields
        required: false
        schema:
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: The number of minutes of backfill requested
        explode: true
        in: query
        name: backfill_minutes
        required: false
        schema:
          format: int32
          maximum: 5
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingTweet'
          description: The request was successful. Successful responses will return
            a stream of individual JSON Tweet payloads.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
      summary: Sample stream
      tags:
      - Twitter
      x-twitter-streaming: true
      x-accepts: application/json
  /2/openapi.json:
    get:
      description: Full open api spec in JSON format. (See https://github.com/OAI/OpenAPI-Specification/blob/master/README.md)
      operationId: getOpenApiSpec
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                title: GetOpenApiSpecResponse
                type: object
          description: The request was successful
      summary: Returns the open api spec document.
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/{id}/tweets:
    get:
      description: Returns a list of Tweets authored by the provided User ID
      operationId: usersIdTweets
      parameters:
      - description: The ID of the User to list Tweets of
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: The minimum Tweet ID to be included in the result set. This parameter
          takes precedence over start_time if both are specified.
        example: "791775337160081409"
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          $ref: '#/components/schemas/TweetID'
        style: form
      - description: The maximum Tweet ID to be included in the result set. This parameter
          takes precedence over end_time if both are specified.
        example: "1346889436626259968"
        explode: true
        in: query
        name: until_id
        required: false
        schema:
          $ref: '#/components/schemas/TweetID'
        style: form
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          format: int32
          maximum: 100
          minimum: 5
          type: integer
        style: form
      - description: The set of entities to exclude (e.g. 'replies' or 'retweets')
        explode: false
        in: query
        name: exclude
        required: false
        schema:
          description: The set of entities to exclude (e.g. 'replies' or 'retweets')
          example:
          - replies
          - retweets
          items:
            enum:
            - replies
            - retweets
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: This parameter is used to get the next 'page' of results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the
          Tweets will be provided. The since_id parameter takes precedence if it is
          also specified.
        example: 2021-02-01T18:40:40.000Z
        explode: true
        in: query
        name: start_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Tweets
          will be provided. The until_id parameter takes precedence if it is also
          specified.
        example: 2021-02-14T18:40:40.000Z
        explode: true
        in: query
        name: end_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [Tweet](#Tweet) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Media fields to display.
        explode: false
        in: query
        name: media.fields
        required: false
        schema:
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          items:
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Place fields to display.
        explode: false
        in: query
        name: place.fields
        required: false
        schema:
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Poll fields to display.
        explode: false
        in: query
        name: poll.fields
        required: false
        schema:
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTweetsTimelineResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: User Tweets timeline by User ID
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/by/username/{username}/tweets:
    get:
      description: Returns a list of Tweets authored by the provided username
      operationId: usersByUsernameTweets
      parameters:
      - description: The username of the User to list Tweets of
        explode: false
        in: path
        name: username
        required: true
        schema:
          $ref: '#/components/schemas/UserName'
        style: simple
      - description: The minimum Tweet ID to be included in the result set. This parameter
          takes precedence over start_time if both are specified.
        example: "791775337160081409"
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          $ref: '#/components/schemas/TweetID'
        style: form
      - description: The maximum Tweet ID to be included in the result set. This parameter
          takes precedence over end_time if both are specified.
        example: "1346889436626259968"
        explode: true
        in: query
        name: until_id
        required: false
        schema:
          $ref: '#/components/schemas/TweetID'
        style: form
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          format: int32
          maximum: 100
          minimum: 5
          type: integer
        style: form
      - description: This parameter is used to get the next 'page' of results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the
          Tweets will be provided. The since_id parameter takes precedence if it is
          also specified.
        example: 2021-02-01T18:40:40.000Z
        explode: true
        in: query
        name: start_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Tweets
          will be provided. The until_id parameter takes precedence if it is also
          specified.
        example: 2021-02-14T18:40:40.000Z
        explode: true
        in: query
        name: end_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The set of entities to exclude (e.g. 'replies' or 'retweets')
        explode: false
        in: query
        name: exclude
        required: false
        schema:
          description: The set of entities to exclude (e.g. 'replies' or 'retweets')
          example:
          - replies
          - retweets
          items:
            enum:
            - replies
            - retweets
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [Tweet](#Tweet) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Media fields to display.
        explode: false
        in: query
        name: media.fields
        required: false
        schema:
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          items:
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Place fields to display.
        explode: false
        in: query
        name: place.fields
        required: false
        schema:
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Poll fields to display.
        explode: false
        in: query
        name: poll.fields
        required: false
        schema:
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTweetsTimelineResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: User Tweets timeline by username
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/{id}/mentions:
    get:
      description: Returns Tweet objects that mention username associated to the provided
        User ID
      operationId: usersIdMentions
      parameters:
      - description: The ID of the User to list mentions of
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: The minimum Tweet ID to be included in the result set. This parameter
          takes precedence over start_time if both are specified.
        example: "791775337160081409"
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          $ref: '#/components/schemas/TweetID'
        style: form
      - description: The maximum Tweet ID to be included in the result set. This parameter
          takes precedence over end_time if both are specified.
        example: "1346889436626259968"
        explode: true
        in: query
        name: until_id
        required: false
        schema:
          $ref: '#/components/schemas/TweetID'
        style: form
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          format: int32
          maximum: 100
          minimum: 5
          type: integer
        style: form
      - description: This parameter is used to get the next 'page' of results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the
          Tweets will be provided. The since_id parameter takes precedence if it is
          also specified.
        example: 2021-02-01T18:40:40.000Z
        explode: true
        in: query
        name: start_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Tweets
          will be provided. The until_id parameter takes precedence if it is also
          specified.
        example: 2021-02-14T18:40:40.000Z
        explode: true
        in: query
        name: end_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [Tweet](#Tweet) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Media fields to display.
        explode: false
        in: query
        name: media.fields
        required: false
        schema:
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          items:
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Place fields to display.
        explode: false
        in: query
        name: place.fields
        required: false
        schema:
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Poll fields to display.
        explode: false
        in: query
        name: poll.fields
        required: false
        schema:
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTweetsTimelineResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: User mention timeline by User ID
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/by/username/{username}/mentions:
    get:
      description: Returns Tweet objects that mention the provided username
      operationId: usersByUsernameMentions
      parameters:
      - description: The username of the User to list mentions of
        explode: false
        in: path
        name: username
        required: true
        schema:
          $ref: '#/components/schemas/UserName'
        style: simple
      - description: The minimum Tweet ID to be included in the result set. This parameter
          takes precedence over start_time if both are specified.
        example: "791775337160081409"
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          $ref: '#/components/schemas/TweetID'
        style: form
      - description: The maximum Tweet ID to be included in the result set. This parameter
          takes precedence over end_time if both are specified.
        example: "1346889436626259968"
        explode: true
        in: query
        name: until_id
        required: false
        schema:
          $ref: '#/components/schemas/TweetID'
        style: form
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          format: int32
          maximum: 100
          minimum: 5
          type: integer
        style: form
      - description: This parameter is used to get the next 'page' of results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the
          Tweets will be provided. The since_id parameter takes precedence if it is
          also specified.
        example: 2021-02-01T18:40:40.000Z
        explode: true
        in: query
        name: start_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Tweets
          will be provided. The until_id parameter takes precedence if it is also
          specified.
        example: 2021-02-14T18:40:40.000Z
        explode: true
        in: query
        name: end_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [Tweet](#Tweet) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Media fields to display.
        explode: false
        in: query
        name: media.fields
        required: false
        schema:
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          items:
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Place fields to display.
        explode: false
        in: query
        name: place.fields
        required: false
        schema:
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Poll fields to display.
        explode: false
        in: query
        name: poll.fields
        required: false
        schema:
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTweetsTimelineResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: User mention timeline by username
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/{id}/likes:
    post:
      description: Causes the user (in the path) to like the specified tweet. The
        user in the path must match the user context authorizing the request.
      operationId: usersIdLike
      parameters:
      - description: The ID of the user that is requesting to like the tweet
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersLikesCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersLikesCreateResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Causes the user (in the path) to like the specified tweet
      tags:
      - Twitter
      x-contentType: application/json
      x-accepts: application/json
  /2/users/{id}/likes/{tweet_id}:
    delete:
      description: Causes the user (in the path) to unlike the specified tweet. The
        user must match the user context authorizing the request
      operationId: usersIdUnlike
      parameters:
      - description: The ID of the user that is requesting to unlike the tweet
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: The ID of the tweet that the user is requesting to unlike
        explode: false
        in: path
        name: tweet_id
        required: true
        schema:
          $ref: '#/components/schemas/TweetID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersLikesDeleteResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Causes the user (in the path) to unlike the specified tweet
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/{id}/liked_tweets:
    get:
      description: Returns a list of Tweets liked by the provided User ID
      operationId: usersIdLikedTweets
      parameters:
      - description: The ID of the User to list the liked Tweets of
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          format: int32
          maximum: 100
          minimum: 5
          type: integer
        style: form
      - description: This parameter is used to get the next 'page' of results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [Tweet](#Tweet) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Media fields to display.
        explode: false
        in: query
        name: media.fields
        required: false
        schema:
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          items:
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Place fields to display.
        explode: false
        in: query
        name: place.fields
        required: false
        schema:
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Poll fields to display.
        explode: false
        in: query
        name: poll.fields
        required: false
        schema:
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersIdLikedTweetsResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Returns Tweet objects liked by the provided User ID
      tags:
      - Twitter
      x-accepts: application/json
  /2/tweets/{id}/liking_users:
    get:
      description: Returns a list of users that have liked the provided Tweet ID
      operationId: tweetsIdLikingUsers
      parameters:
      - description: The ID of the Tweet for which to return results
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/TweetID'
        style: simple
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          format: int32
          maximum: 100
          minimum: 5
          type: integer
        style: form
      - description: This parameter is used to get the next 'page' of results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericMultipleUsersLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Returns user objects that have liked the provided Tweet ID
      tags:
      - Twitter
      x-accepts: application/json
  /2/tweets/{id}/retweeted_by:
    get:
      description: Returns a list of users that have retweeted the provided Tweet
        ID
      operationId: tweetsIdRetweetingUsers
      parameters:
      - description: The ID of the Tweet for which to return results
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/TweetID'
        style: simple
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          format: int32
          maximum: 100
          minimum: 5
          type: integer
        style: form
      - description: This parameter is used to get the next 'page' of results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericMultipleUsersLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Returns user objects that have retweeted the provided Tweet ID
      tags:
      - Twitter
      x-accepts: application/json
  /2/users/{id}/retweets:
    post:
      description: Causes the user (in the path) to retweet the specified tweet. The
        user in the path must match the user context authorizing the request.
      operationId: usersIdRetweets
      parameters:
      - description: The ID of the user that is requesting to retweet the tweet
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersRetweetsCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRetweetsCreateResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Causes the user (in the path) to retweet the specified tweet
      tags:
      - Twitter
      x-contentType: application/json
      x-accepts: application/json
  /2/users/{id}/retweets/{source_tweet_id}:
    delete:
      description: Causes the user (in the path) to unretweet the specified tweet.
        The user must match the user context authorizing the request
      operationId: usersIdUnretweets
      parameters:
      - description: The ID of the user that is requesting to unretweet the tweet
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      - description: The ID of the tweet that the user is requesting to unretweet
        explode: false
        in: path
        name: source_tweet_id
        required: true
        schema:
          $ref: '#/components/schemas/TweetID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRetweetsDeleteResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Causes the user (in the path) to unretweet the specified tweet
      tags:
      - Twitter
      x-accepts: application/json
  /2/tweets/counts/recent:
    get:
      description: Returns Tweet Counts from the last 7 days that match a search query.
      operationId: tweetCountsRecentSearch
      parameters:
      - description: One query/rule/filter for matching Tweets. Up to 2048 characters.
        explode: true
        in: query
        name: query
        required: true
        schema:
          example: (from:TwitterDev OR from:TwitterAPI) has:media -is:retweet
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent
          7 days) from which the Tweets will be provided. Timestamp is in second granularity
          and is inclusive (i.e. 12:00:01 includes the first second of the minute).
        explode: true
        in: query
        name: start_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to
          which the Tweets will be provided. Timestamp is in second granularity and
          is exclusive (i.e. 12:00:01 excludes the first second of the minute).
        explode: true
        in: query
        name: end_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Returns results with a Tweet ID greater than (that is, more recent
          than) the specified ID.
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          $ref: '#/components/schemas/TweetID'
        style: form
      - description: Returns results with a Tweet ID less than (that is, older than)
          the specified ID.
        explode: true
        in: query
        name: until_id
        required: false
        schema:
          $ref: '#/components/schemas/TweetID'
        style: form
      - description: This parameter is used to get the next 'page' of results. The
          value used with the parameter is pulled directly from the response provided
          by the API, and should not be modified.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: The granularity for the search counts results.
        explode: true
        in: query
        name: granularity
        required: false
        schema:
          $ref: '#/components/schemas/Granularity'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetCountsResponse'
          description: Recent tweet counts response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Recent search counts
      tags:
      - Twitter
      x-accepts: application/json
  /2/tweets/counts/all:
    get:
      description: Returns Tweet Counts that match a search query.
      operationId: tweetCountsFullArchiveSearch
      parameters:
      - description: One query/rule/filter for matching Tweets. Up to 2048 characters.
        explode: true
        in: query
        name: query
        required: true
        schema:
          example: (from:TwitterDev OR from:TwitterAPI) has:media -is:retweet
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent
          7 days) from which the Tweets will be provided. Timestamp is in second granularity
          and is inclusive (i.e. 12:00:01 includes the first second of the minute).
        explode: true
        in: query
        name: start_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to
          which the Tweets will be provided. Timestamp is in second granularity and
          is exclusive (i.e. 12:00:01 excludes the first second of the minute).
        explode: true
        in: query
        name: end_time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Returns results with a Tweet ID greater than (that is, more recent
          than) the specified ID.
        explode: true
        in: query
        name: since_id
        required: false
        schema:
          $ref: '#/components/schemas/TweetID'
        style: form
      - description: Returns results with a Tweet ID less than (that is, older than)
          the specified ID.
        explode: true
        in: query
        name: until_id
        required: false
        schema:
          $ref: '#/components/schemas/TweetID'
        style: form
      - description: This parameter is used to get the next 'page' of results. The
          value used with the parameter is pulled directly from the response provided
          by the API, and should not be modified.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: The granularity for the search counts results.
        explode: true
        in: query
        name: granularity
        required: false
        schema:
          $ref: '#/components/schemas/Granularity'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetCountsResponse'
          description: Tweet counts response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Full archive search counts
      tags:
      - Twitter
      x-accepts: application/json
  /2/compliance/jobs:
    get:
      description: Returns recent compliance jobs for a given job type and optional
        job status
      operationId: listBatchComplianceJobs
      parameters:
      - description: Type of compliance job to list.
        explode: true
        in: query
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/ComplianceJobType'
        style: form
      - description: Status of compliance job to list.
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/ComplianceJobStatus'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiComplianceJobResponse'
          description: List compliance jobs response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
      summary: List compliance jobs
      tags:
      - Twitter
      x-accepts: application/json
    post:
      description: Creates a compliance for the given job type
      operationId: createBatchComplianceJob
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CreateBatchComplianceJobRequest'
        content:
          application/json:
            schema:
              description: A request to create a new batch compliance job.
              example:
                resumable: true
                name: my-job
              properties:
                type:
                  $ref: '#/components/schemas/ComplianceJobType'
                resumable:
                  description: If true, this endpoint will return a pre-signed URL
                    with resumable uploads enabled
                  title: CreateBatchComplianceJobRequestResumable
                  type: boolean
                name:
                  description: User-provided name for a compliance job
                  example: my-job
                  maxLength: 64
                  type: string
              required:
              - type
              title: CreateBatchComplianceJobRequest
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleComplianceJobResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
      summary: Create compliance job
      tags:
      - Twitter
      x-contentType: application/json
      x-accepts: application/json
  /2/compliance/jobs/{id}:
    get:
      description: Returns a single compliance job by ID
      operationId: getBatchComplianceJob
      parameters:
      - description: ID of the compliance job to retrieve.
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleComplianceJobResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
      summary: Get compliance job
      tags:
      - Twitter
      x-accepts: application/json
  /2/lists:
    post:
      description: Creates a new List.
      operationId: listIdCreate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCreateResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Create List
      tags:
      - Twitter
      x-contentType: application/json
      x-accepts: application/json
  /2/lists/{id}:
    delete:
      description: Delete a List that you own.
      operationId: listIdDelete
      parameters:
      - description: The ID of the List to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/ListID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeleteResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Delete List
      tags:
      - Twitter
      x-accepts: application/json
    get:
      description: Returns a List
      operationId: listIdGet
      parameters:
      - description: The ID of the List to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/ListID'
        style: simple
      - description: A comma separated list of List fields to display.
        explode: false
        in: query
        name: list.fields
        required: false
        schema:
          description: The fields available for a List object.
          example:
          - created_at
          - description
          - follower_count
          - member_count
          - name
          - private
          items:
            enum:
            - created_at
            - description
            - follower_count
            - id
            - member_count
            - name
            - owner_id
            - private
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [List](#List) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - owner_id
          items:
            enum:
            - owner_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleListLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: List lookup by List ID
      tags:
      - Twitter
      x-accepts: application/json
    put:
      description: Update a List that you own.
      operationId: listIdUpdate
      parameters:
      - description: The ID of the List to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/ListID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUpdateResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Update List
      tags:
      - Twitter
      x-contentType: application/json
      x-accepts: application/json
  /2/lists/{id}/followers:
    get:
      description: Returns a list of users that follow a List by the provided List
        ID
      operationId: listGetFollowers
      parameters:
      - description: The ID of the List for which to return followers
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/ListID'
        style: simple
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: This parameter is used to get a specified 'page' of results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [User](#User) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - pinned_tweet_id
          items:
            enum:
            - pinned_tweet_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLookupMultipleUsersLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Returns user objects that follow a List by the provided List ID
      tags:
      - Twitter
      x-accepts: application/json
  /2/lists/{id}/members:
    get:
      description: Returns a list of users that are members of a List by the provided
        List ID
      operationId: listGetMembers
      parameters:
      - description: The ID of the List for which to return members
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/ListID'
        style: simple
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: This parameter is used to get a specified 'page' of results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [User](#User) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - pinned_tweet_id
          items:
            enum:
            - pinned_tweet_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLookupMultipleUsersLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Returns user objects that are members of a List by the provided List
        ID
      tags:
      - Twitter
      x-accepts: application/json
    post:
      description: Causes a user to become a member of a List.
      operationId: listAddMember
      parameters:
      - description: The ID of the List to add a member
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/ListID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAddMemberRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMemberResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Add a List member
      tags:
      - Twitter
      x-contentType: application/json
      x-accepts: application/json
  /2/lists/{id}/members/{user_id}:
    delete:
      description: Causes a user to be removed from the members of a List.
      operationId: listRemoveMember
      parameters:
      - description: The ID of the List to remove a member
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/ListID'
        style: simple
      - description: The ID of user that will be removed from the List
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMemberResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - UserToken: []
      summary: Remove a List member
      tags:
      - Twitter
      x-accepts: application/json
  /2/lists/{id}/tweets:
    get:
      description: Returns a list of Tweets associated with the provided List ID
      operationId: listsIdTweets
      parameters:
      - description: The ID of the List to list Tweets of
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/ListID'
        style: simple
      - description: The maximum number of results
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: This parameter is used to get the next 'page' of results.
        explode: true
        in: query
        name: pagination_token
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [Tweet](#Tweet) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          items:
            enum:
            - author_id
            - referenced_tweets.id
            - in_reply_to_user_id
            - geo.place_id
            - attachments.media_keys
            - attachments.poll_ids
            - entities.mentions.username
            - referenced_tweets.id.author_id
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Media fields to display.
        explode: false
        in: query
        name: media.fields
        required: false
        schema:
          description: The list of fields you can display for a Media object.
          example:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          items:
            enum:
            - media_key
            - duration_ms
            - height
            - preview_image_url
            - type
            - url
            - width
            - public_metrics
            - non_public_metrics
            - organic_metrics
            - promoted_metrics
            - alt_text
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Place fields to display.
        explode: false
        in: query
        name: place.fields
        required: false
        schema:
          description: The list of fields you can display for a Place object.
          example:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          items:
            enum:
            - id
            - name
            - country_code
            - place_type
            - full_name
            - country
            - contained_within
            - geo
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of Poll fields to display.
        explode: false
        in: query
        name: poll.fields
        required: false
        schema:
          description: The list of fields you can display for a Poll object.
          example:
          - duration_minutes
          - options
          - voting_status
          - end_datetime
          items:
            enum:
            - id
            - options
            - voting_status
            - end_datetime
            - duration_minutes
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListsIdTweetsResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: List Tweets timeline by List ID
      tags:
      - Twitter
      x-accepts: application/json
  /2/spaces/{id}:
    get:
      description: Returns a variety of information about the Space specified by the
        requested ID
      operationId: findSpaceById
      parameters:
      - description: The space id to be retrieved
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/SpaceID'
        style: simple
      - description: A comma separated list of Space fields to display.
        explode: false
        in: query
        name: space.fields
        required: false
        schema:
          description: The fields available for a Space object.
          example:
          - created_at
          - creator_id
          - host_ids
          - invited_user_ids
          - is_ticketed
          - lang
          - participant_count
          - scheduled_start
          - speaker_ids
          - started_at
          - title
          - updated_at
          items:
            enum:
            - created_at
            - creator_id
            - host_ids
            - invited_user_ids
            - is_ticketed
            - lang
            - participant_count
            - scheduled_start
            - speaker_ids
            - started_at
            - title
            - updated_at
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [Space](#Space) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - creator_id
          - host_ids
          - invited_user_ids
          - speaker_ids
          items:
            enum:
            - creator_id
            - host_ids
            - invited_user_ids
            - speaker_ids
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleSpaceLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Space lookup by Space ID
      tags:
      - Twitter
      x-accepts: application/json
  /2/spaces:
    get:
      description: Returns a variety of information about the Spaces specified by
        the requested IDs
      operationId: findSpacesByIds
      parameters:
      - description: A list of space ids
        explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            $ref: '#/components/schemas/SpaceID'
          minItems: 1
          type: array
        style: form
      - description: A comma separated list of Space fields to display.
        explode: false
        in: query
        name: space.fields
        required: false
        schema:
          description: The fields available for a Space object.
          example:
          - created_at
          - creator_id
          - host_ids
          - invited_user_ids
          - is_ticketed
          - lang
          - participant_count
          - scheduled_start
          - speaker_ids
          - started_at
          - title
          - updated_at
          items:
            enum:
            - created_at
            - creator_id
            - host_ids
            - invited_user_ids
            - is_ticketed
            - lang
            - participant_count
            - scheduled_start
            - speaker_ids
            - started_at
            - title
            - updated_at
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [Space](#Space) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - creator_id
          - host_ids
          - invited_user_ids
          - speaker_ids
          items:
            enum:
            - creator_id
            - host_ids
            - invited_user_ids
            - speaker_ids
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiSpaceLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Space lookup up Space IDs
      tags:
      - Twitter
      x-accepts: application/json
  /2/spaces/by/creator_ids:
    get:
      description: Returns a variety of information about the Spaces created by the
        provided User IDs
      operationId: findSpacesByCreatorIds
      parameters:
      - description: The users to search through
        explode: true
        in: query
        name: user_ids
        required: true
        schema:
          items:
            $ref: '#/components/schemas/UserID'
          minItems: 1
          type: array
        style: form
      - description: A comma separated list of Space fields to display.
        explode: false
        in: query
        name: space.fields
        required: false
        schema:
          description: The fields available for a Space object.
          example:
          - created_at
          - creator_id
          - host_ids
          - invited_user_ids
          - is_ticketed
          - lang
          - participant_count
          - scheduled_start
          - speaker_ids
          - started_at
          - title
          - updated_at
          items:
            enum:
            - created_at
            - creator_id
            - host_ids
            - invited_user_ids
            - is_ticketed
            - lang
            - participant_count
            - scheduled_start
            - speaker_ids
            - started_at
            - title
            - updated_at
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [Space](#Space) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - creator_id
          - host_ids
          - invited_user_ids
          - speaker_ids
          items:
            enum:
            - creator_id
            - host_ids
            - invited_user_ids
            - speaker_ids
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiSpaceLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Space lookup by their creators
      tags:
      - Twitter
      x-accepts: application/json
  /2/spaces/search:
    get:
      description: Returns Spaces that match the provided query.
      operationId: searchSpaces
      parameters:
      - description: The search query
        example: crypto
        explode: true
        in: query
        name: query
        required: true
        schema:
          description: The query to use in the Spaces search endpoint
          example: crypto
          type: string
        style: form
      - description: The state of spaces to search for
        explode: true
        in: query
        name: state
        required: false
        schema:
          default: all
          description: The current state of the space.
          enum:
          - live
          - scheduled
          - all
          example: live
          type: string
        style: form
      - description: The number of results to return. The maximum for this value is
          100.
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
        style: form
      - description: A comma separated list of Space fields to display.
        explode: false
        in: query
        name: space.fields
        required: false
        schema:
          description: The fields available for a Space object.
          example:
          - created_at
          - creator_id
          - host_ids
          - invited_user_ids
          - is_ticketed
          - lang
          - participant_count
          - scheduled_start
          - speaker_ids
          - started_at
          - title
          - updated_at
          items:
            enum:
            - created_at
            - creator_id
            - host_ids
            - invited_user_ids
            - is_ticketed
            - lang
            - participant_count
            - scheduled_start
            - speaker_ids
            - started_at
            - title
            - updated_at
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      - description: A comma separated list of fields to expand.
        explode: false
        in: query
        name: expansions
        required: false
        schema:
          description: The list of fields you can expand for a [Space](#Space) object.
            If the field has an ID, it can be expanded into a full object.
          example:
          - creator_id
          - host_ids
          - invited_user_ids
          - speaker_ids
          items:
            enum:
            - creator_id
            - host_ids
            - invited_user_ids
            - speaker_ids
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiSpaceLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Search for Spaces
      tags:
      - Twitter
      x-accepts: application/json
  /2/spaces/{id}/tweets:
    get:
      description: Retrieves tweets shared in the specified space
      operationId: spaceTweets
      parameters:
      - description: The number of tweets to fetch from the provided space. If not
          provided, the value will default to the maximum of 100
        explode: true
        in: query
        name: max_results
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
        style: form
      - description: The space id from which tweets will be retrieved
        example: 1YqKDqWqdPLsV
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/SpaceID'
        style: simple
      - description: A comma separated list of Tweet fields to display.
        explode: false
        in: query
        name: tweet.fields
        required: false
        schema:
          description: The list of fields you can display for a [Tweet](#Tweet) object.
          example:
          - created_at
          - author_id
          - entities
          - conversation_id
          - reply_settings
          - public_metrics
          items:
            enum:
            - id
            - created_at
            - text
            - author_id
            - in_reply_to_user_id
            - referenced_tweets
            - attachments
            - withheld
            - geo
            - entities
            - public_metrics
            - possibly_sensitive
            - source
            - lang
            - context_annotations
            - non_public_metrics
            - promoted_metrics
            - organic_metrics
            - conversation_id
            - reply_settings
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiTweetLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Retrieve tweets from a Space
      tags:
      - Twitter
      x-accepts: application/json
  /2/spaces/{id}/buyers:
    get:
      description: Retrieves the list of users who purchased a ticket to the given
        space
      operationId: spaceBuyers
      parameters:
      - description: The space id from which tweets will be retrieved
        example: 1YqKDqWqdPLsV
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/SpaceID'
        style: simple
      - description: A comma separated list of User fields to display.
        explode: false
        in: query
        name: user.fields
        required: false
        schema:
          description: The list of fields you can display for a [User](#User) object.
          example:
          - username
          - verified
          - profile_image_url
          items:
            enum:
            - id
            - created_at
            - name
            - username
            - protected
            - verified
            - withheld
            - profile_image_url
            - location
            - url
            - description
            - entities
            - pinned_tweet_id
            - public_metrics
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiUserLookupResponse'
          description: The request was successful
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: The request has failed.
      security:
      - BearerToken: []
        UserToken: []
      summary: Retrieve the list of users who purchased a ticket to the given space
      tags:
      - Twitter
      x-accepts: application/json
components:
  parameters:
    TweetExpansionsParameter:
      description: A comma separated list of fields to expand.
      explode: false
      in: query
      name: expansions
      required: false
      schema:
        description: The list of fields you can expand for a [Tweet](#Tweet) object.
          If the field has an ID, it can be expanded into a full object.
        example:
        - author_id
        - referenced_tweets.id
        - in_reply_to_user_id
        - geo.place_id
        - attachments.media_keys
        - attachments.poll_ids
        - entities.mentions.username
        - referenced_tweets.id.author_id
        items:
          enum:
          - author_id
          - referenced_tweets.id
          - in_reply_to_user_id
          - geo.place_id
          - attachments.media_keys
          - attachments.poll_ids
          - entities.mentions.username
          - referenced_tweets.id.author_id
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    SpaceFieldsParameter:
      description: A comma separated list of Space fields to display.
      explode: false
      in: query
      name: space.fields
      required: false
      schema:
        description: The fields available for a Space object.
        example:
        - created_at
        - creator_id
        - host_ids
        - invited_user_ids
        - is_ticketed
        - lang
        - participant_count
        - scheduled_start
        - speaker_ids
        - started_at
        - title
        - updated_at
        items:
          enum:
          - created_at
          - creator_id
          - host_ids
          - invited_user_ids
          - is_ticketed
          - lang
          - participant_count
          - scheduled_start
          - speaker_ids
          - started_at
          - title
          - updated_at
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    UserExpansionsParameter:
      description: A comma separated list of fields to expand.
      explode: false
      in: query
      name: expansions
      required: false
      schema:
        description: The list of fields you can expand for a [User](#User) object.
          If the field has an ID, it can be expanded into a full object.
        example:
        - pinned_tweet_id
        items:
          enum:
          - pinned_tweet_id
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    SpaceExpansionsParameter:
      description: A comma separated list of fields to expand.
      explode: false
      in: query
      name: expansions
      required: false
      schema:
        description: The list of fields you can expand for a [Space](#Space) object.
          If the field has an ID, it can be expanded into a full object.
        example:
        - creator_id
        - host_ids
        - invited_user_ids
        - speaker_ids
        items:
          enum:
          - creator_id
          - host_ids
          - invited_user_ids
          - speaker_ids
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    ListExpansionsParameter:
      description: A comma separated list of fields to expand.
      explode: false
      in: query
      name: expansions
      required: false
      schema:
        description: The list of fields you can expand for a [List](#List) object.
          If the field has an ID, it can be expanded into a full object.
        example:
        - owner_id
        items:
          enum:
          - owner_id
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    TweetFieldsParameter:
      description: A comma separated list of Tweet fields to display.
      explode: false
      in: query
      name: tweet.fields
      required: false
      schema:
        description: The list of fields you can display for a [Tweet](#Tweet) object.
        example:
        - created_at
        - author_id
        - entities
        - conversation_id
        - reply_settings
        - public_metrics
        items:
          enum:
          - id
          - created_at
          - text
          - author_id
          - in_reply_to_user_id
          - referenced_tweets
          - attachments
          - withheld
          - geo
          - entities
          - public_metrics
          - possibly_sensitive
          - source
          - lang
          - context_annotations
          - non_public_metrics
          - promoted_metrics
          - organic_metrics
          - conversation_id
          - reply_settings
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    UserFieldsParameter:
      description: A comma separated list of User fields to display.
      explode: false
      in: query
      name: user.fields
      required: false
      schema:
        description: The list of fields you can display for a [User](#User) object.
        example:
        - username
        - verified
        - profile_image_url
        items:
          enum:
          - id
          - created_at
          - name
          - username
          - protected
          - verified
          - withheld
          - profile_image_url
          - location
          - url
          - description
          - entities
          - pinned_tweet_id
          - public_metrics
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    MediaFieldsParameter:
      description: A comma separated list of Media fields to display.
      explode: false
      in: query
      name: media.fields
      required: false
      schema:
        description: The list of fields you can display for a Media object.
        example:
        - media_key
        - duration_ms
        - height
        - preview_image_url
        - type
        - url
        - width
        - public_metrics
        items:
          enum:
          - media_key
          - duration_ms
          - height
          - preview_image_url
          - type
          - url
          - width
          - public_metrics
          - non_public_metrics
          - organic_metrics
          - promoted_metrics
          - alt_text
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    PlaceFieldsParameter:
      description: A comma separated list of Place fields to display.
      explode: false
      in: query
      name: place.fields
      required: false
      schema:
        description: The list of fields you can display for a Place object.
        example:
        - id
        - name
        - country_code
        - place_type
        - full_name
        - country
        - contained_within
        - geo
        items:
          enum:
          - id
          - name
          - country_code
          - place_type
          - full_name
          - country
          - contained_within
          - geo
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    PollFieldsParameter:
      description: A comma separated list of Poll fields to display.
      explode: false
      in: query
      name: poll.fields
      required: false
      schema:
        description: The list of fields you can display for a Poll object.
        example:
        - duration_minutes
        - options
        - voting_status
        - end_datetime
        items:
          enum:
          - id
          - options
          - voting_status
          - end_datetime
          - duration_minutes
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    ListFieldsParameter:
      description: A comma separated list of List fields to display.
      explode: false
      in: query
      name: list.fields
      required: false
      schema:
        description: The fields available for a List object.
        example:
        - created_at
        - description
        - follower_count
        - member_count
        - name
        - private
        items:
          enum:
          - created_at
          - description
          - follower_count
          - id
          - member_count
          - name
          - owner_id
          - private
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    SinceIdRequestParameter:
      description: The minimum Tweet ID to be included in the result set. This parameter
        takes precedence over start_time if both are specified.
      example: "791775337160081409"
      explode: true
      in: query
      name: since_id
      required: false
      schema:
        $ref: '#/components/schemas/TweetID'
      style: form
    UntilIdRequestParameter:
      description: The maximum Tweet ID to be included in the result set. This parameter
        takes precedence over end_time if both are specified.
      example: "1346889436626259968"
      explode: true
      in: query
      name: until_id
      required: false
      schema:
        $ref: '#/components/schemas/TweetID'
      style: form
    PaginationTokenRequestParameter:
      description: This parameter is used to get the next 'page' of results.
      explode: true
      in: query
      name: pagination_token
      required: false
      schema:
        minLength: 1
        type: string
      style: form
    SignedLongPaginationTokenRequestParameter:
      description: This parameter is used to get a specified 'page' of results.
      explode: true
      in: query
      name: pagination_token
      required: false
      schema:
        format: int64
        type: integer
      style: form
    MaxResultsRequestParameter:
      description: The maximum number of results
      explode: true
      in: query
      name: max_results
      required: false
      schema:
        format: int32
        maximum: 100
        minimum: 5
        type: integer
      style: form
    StartTimeRequestParameter:
      description: YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the
        Tweets will be provided. The since_id parameter takes precedence if it is
        also specified.
      example: 2021-02-01T18:40:40.000Z
      explode: true
      in: query
      name: start_time
      required: false
      schema:
        format: date-time
        type: string
      style: form
    EndTimeRequestParameter:
      description: YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Tweets
        will be provided. The until_id parameter takes precedence if it is also specified.
      example: 2021-02-14T18:40:40.000Z
      explode: true
      in: query
      name: end_time
      required: false
      schema:
        format: date-time
        type: string
      style: form
    TweetTypeExcludesRequestParameter:
      description: The set of entities to exclude (e.g. 'replies' or 'retweets')
      explode: false
      in: query
      name: exclude
      required: false
      schema:
        description: The set of entities to exclude (e.g. 'replies' or 'retweets')
        example:
        - replies
        - retweets
        items:
          enum:
          - replies
          - retweets
          type: string
        minItems: 1
        type: array
        uniqueItems: true
      style: form
    BackfillMinutesRequestParameter:
      description: The number of minutes of backfill requested
      explode: true
      in: query
      name: backfill_minutes
      required: false
      schema:
        format: int32
        maximum: 5
        minimum: 0
        type: integer
      style: form
  requestBodies:
    HideReplyByIdRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HideReplyByIdRequest'
    CreateBatchComplianceJobRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateBatchComplianceJobRequest'
      required: true
    UsersIdBlockRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UsersIdBlockRequest'
    CreateTweetRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTweetRequest'
    UsersIdMuteRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UsersIdMuteRequest'
    UsersIdFollowRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UsersIdFollowRequest'
  responses:
    HttpErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: The request has failed.
  schemas:
    ProblemOrError:
      oneOf:
      - $ref: '#/components/schemas/Error'
      - $ref: '#/components/schemas/Problem'
      type: object
    MediaHeight:
      description: The height of the media in pixels
      minimum: 0
      type: integer
    MediaWidth:
      description: The width of the media in pixels
      minimum: 0
      type: integer
    HTTPStatusCode:
      description: HTTP Status Code.
      maximum: 599
      minimum: 100
      type: integer
    ContextAnnotation:
      description: Annotation inferred from the tweet text.
      properties:
        domain:
          $ref: '#/components/schemas/ContextAnnotationDomainFields'
        entity:
          $ref: '#/components/schemas/ContextAnnotationEntityFields'
      required:
      - domain
      - entity
      type: object
    ContextAnnotationDomainFields:
      description: Represents the data for the context annotation domain.
      properties:
        id:
          description: The unique id for a context annotation domain.
          pattern: ^[0-9]{1,19}$
          type: string
        name:
          description: Name of the context annotation domain.
          type: string
        description:
          description: Description of the context annotation domain.
          type: string
      required:
      - id
      type: object
    ContextAnnotationEntityFields:
      description: Represents the data for the context annotation entity.
      properties:
        id:
          description: The unique id for a context annotation entity.
          pattern: ^[0-9]{1,19}$
          type: string
        name:
          description: Name of the context annotation entity.
          type: string
        description:
          description: Description of the context annotation entity.
          type: string
      required:
      - id
      type: object
    URL:
      description: A validly formatted URL.
      example: https://developer.twitter.com/en/docs/twitter-api
      format: uri
      type: string
    EntityIndicesInclusiveExclusive:
      description: Represent a boundary range (start and end index) for a recognized
        entity (for example a hashtag or a mention). `start` must be smaller than
        `end`.  The start index is inclusive, the end index is exclusive.
      properties:
        start:
          description: Index (zero-based) at which position this entity starts.  The
            index is inclusive.
          example: 50
          minimum: 0
          type: integer
        end:
          description: Index (zero-based) at which position this entity ends.  The
            index is exclusive.
          example: 61
          minimum: 0
          type: integer
      required:
      - end
      - start
      type: object
    EntityIndicesInclusiveInclusive:
      description: Represent a boundary range (start and end index) for a recognized
        entity (for example a hashtag or a mention). `start` must be smaller than
        `end`.  The start index is inclusive, the end index is inclusive.
      properties:
        start:
          description: Index (zero-based) at which position this entity starts.  The
            index is inclusive.
          example: 50
          minimum: 0
          type: integer
        end:
          description: Index (zero-based) at which position this entity ends.  The
            index is inclusive.
          example: 61
          minimum: 0
          type: integer
      required:
      - end
      - start
      type: object
    URLFields:
      description: Represent the portion of text recognized as a URL.
      properties:
        url:
          description: A validly formatted URL.
          example: https://developer.twitter.com/en/docs/twitter-api
          format: uri
          type: string
        expanded_url:
          description: A validly formatted URL.
          example: https://developer.twitter.com/en/docs/twitter-api
          format: uri
          type: string
        display_url:
          description: The URL as displayed in the Twitter client.
          example: twittercommunity.com/t/introducing-…
          type: string
        unwound_url:
          description: Fully resolved url
          example: https://twittercommunity.com/t/introducing-the-v2-follow-lookup-endpoints/147118
          format: uri
          type: string
        status:
          description: HTTP Status Code.
          maximum: 599
          minimum: 100
          type: integer
        title:
          description: Title of the page the URL points to.
          example: Introducing the v2 follow lookup endpoints
          type: string
        description:
          description: Description of the URL landing page.
          example: This is a description of the website.
          type: string
        images:
          items:
            $ref: '#/components/schemas/URLImage'
          minItems: 1
          type: array
      required:
      - url
      type: object
    UrlEntity:
      allOf:
      - $ref: '#/components/schemas/EntityIndicesInclusiveExclusive'
      - $ref: '#/components/schemas/URLFields'
      description: Represent the portion of text recognized as a URL, and its start
        and end position within the text.
    URLImage:
      description: Represent the information for the URL image
      properties:
        url:
          description: A validly formatted URL.
          example: https://developer.twitter.com/en/docs/twitter-api
          format: uri
          type: string
        height:
          description: The height of the media in pixels
          minimum: 0
          type: integer
        width:
          description: The width of the media in pixels
          minimum: 0
          type: integer
      type: object
    HashtagFields:
      description: Represent the portion of text recognized as a Hashtag, and its
        start and end position within the text.
      properties:
        tag:
          description: The text of the Hashtag
          example: MondayMotivation
          type: string
      required:
      - tag
      type: object
    HashtagEntity:
      allOf:
      - $ref: '#/components/schemas/EntityIndicesInclusiveExclusive'
      - $ref: '#/components/schemas/HashtagFields'
    CashtagFields:
      description: Represent the portion of text recognized as a Cashtag, and its
        start and end position within the text.
      properties:
        tag:
          example: TWTR
          type: string
      required:
      - tag
      type: object
    CashtagEntity:
      allOf:
      - $ref: '#/components/schemas/EntityIndicesInclusiveExclusive'
      - $ref: '#/components/schemas/CashtagFields'
    MentionFields:
      description: Represent the portion of text recognized as a User mention, and
        its start and end position within the text.
      properties:
        username:
          description: The Twitter handle (screen name) of this user.
          pattern: ^[A-Za-z0-9_]{1,15}$
          type: string
        id:
          description: Unique identifier of this User. This is returned as a string
            in order to avoid complications with languages and tools that cannot handle
            large integers.
          example: "2244994945"
          pattern: ^[0-9]{1,19}$
          type: string
      required:
      - id
      - username
      type: object
    MentionEntity:
      allOf:
      - $ref: '#/components/schemas/EntityIndicesInclusiveExclusive'
      - $ref: '#/components/schemas/MentionFields'
    FullTextEntities:
      properties:
        urls:
          items:
            $ref: '#/components/schemas/UrlEntity'
          minItems: 1
          type: array
        hashtags:
          items:
            $ref: '#/components/schemas/HashtagEntity'
          minItems: 1
          type: array
        mentions:
          items:
            $ref: '#/components/schemas/MentionEntity'
          minItems: 1
          type: array
        cashtags:
          items:
            $ref: '#/components/schemas/CashtagEntity'
          minItems: 1
          type: array
        annotations:
          items:
            allOf:
            - $ref: '#/components/schemas/EntityIndicesInclusiveInclusive'
            - description: Represents the data for the annotation.
              properties:
                probability:
                  description: Confidence factor for annotation type.
                  format: double
                  maximum: 1
                  minimum: 0
                  type: number
                type:
                  description: Annotation type.
                  example: Person
                  type: string
                normalized_text:
                  description: Text used to determine annotation.
                  example: Barack Obama
                  type: string
              type: object
            description: Annotation for entities based on the Tweet text.
          minItems: 1
          type: array
      type: object
    TweetID:
      description: Unique identifier of this Tweet. This is returned as a string in
        order to avoid complications with languages and tools that cannot handle large
        integers.
      example: "1346889436626259968"
      pattern: ^[0-9]{1,19}$
      type: string
    TweetText:
      description: The content of the Tweet.
      example: Learn how to use the user Tweet timeline and user mention timeline
        endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
      type: string
    UserID:
      description: Unique identifier of this User. This is returned as a string in
        order to avoid complications with languages and tools that cannot handle large
        integers.
      example: "2244994945"
      pattern: ^[0-9]{1,19}$
      type: string
    SpaceID:
      description: The unique identifier of this Space.
      example: 1SLjjRYNejbKM
      pattern: ^[a-zA-Z0-9]{1,13}$
      type: string
    ReplySettings:
      description: Shows who can reply a Tweet. Fields returned are everyone, mentioned_users,
        and following.
      enum:
      - everyone
      - mentionedUsers
      - following
      - other
      pattern: ^[A-Za-z]{1,12}$
      type: string
    Error:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      required:
      - code
      - message
    Expansions:
      example:
        places:
        - geo:
            bbox:
            - -105.193475
            - 39.60973
            - -105.053164
            - 39.761974
            geometry:
              coordinates:
              - -105.18816086351444
              - 40.247749999999996
              type: Point
            type: Feature
            properties: '{}'
          country_code: US
          country: United States
          contained_within:
          - f7eb2fa2fea288b1
          - f7eb2fa2fea288b1
          full_name: Lakewood, CO
          place_type: city
          name: Lakewood
          id: f7eb2fa2fea288b1
        - geo:
            bbox:
            - -105.193475
            - 39.60973
            - -105.053164
            - 39.761974
            geometry:
              coordinates:
              - -105.18816086351444
              - 40.247749999999996
              type: Point
            type: Feature
            properties: '{}'
          country_code: US
          country: United States
          contained_within:
          - f7eb2fa2fea288b1
          - f7eb2fa2fea288b1
          full_name: Lakewood, CO
          place_type: city
          name: Lakewood
          id: f7eb2fa2fea288b1
        polls:
        - voting_status: open
          duration_minutes: 5
          end_datetime: 2000-01-23T04:56:07.000+00:00
          options:
          - votes: 5
            position: 1
            label: label
          - votes: 5
            position: 1
            label: label
          - votes: 5
            position: 1
            label: label
          - votes: 5
            position: 1
            label: label
          id: "1365059861688410112"
        - voting_status: open
          duration_minutes: 5
          end_datetime: 2000-01-23T04:56:07.000+00:00
          options:
          - votes: 5
            position: 1
            label: label
          - votes: 5
            position: 1
            label: label
          - votes: 5
            position: 1
            label: label
          - votes: 5
            position: 1
            label: label
          id: "1365059861688410112"
        media:
        - width: 0
          type: type
          media_key: media_key
          height: 0
        - width: 0
          type: type
          media_key: media_key
          height: 0
        tweets:
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        users:
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
      properties:
        users:
          items:
            $ref: '#/components/schemas/User'
          minItems: 1
          type: array
        tweets:
          items:
            $ref: '#/components/schemas/Tweet'
          minItems: 1
          type: array
        places:
          items:
            $ref: '#/components/schemas/Place'
          minItems: 1
          type: array
        media:
          items:
            $ref: '#/components/schemas/Media'
          minItems: 1
          type: array
        polls:
          items:
            $ref: '#/components/schemas/Poll'
          minItems: 1
          type: array
      type: object
    Tweet:
      example:
        id: "1346889436626259968"
        created_at: Wed Jan 06 18:40:40 +0000 2021
        text: Learn how to use the user Tweet timeline and user mention timeline endpoints
          in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
        author_id: "2244994945"
      properties:
        id:
          description: Unique identifier of this Tweet. This is returned as a string
            in order to avoid complications with languages and tools that cannot handle
            large integers.
          example: "1346889436626259968"
          pattern: ^[0-9]{1,19}$
          type: string
        created_at:
          description: Creation time of the Tweet.
          example: 2021-01-06T18:40:40Z
          format: date-time
          type: string
        text:
          description: The content of the Tweet.
          example: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          type: string
        author_id:
          description: Unique identifier of this User. This is returned as a string
            in order to avoid complications with languages and tools that cannot handle
            large integers.
          example: "2244994945"
          pattern: ^[0-9]{1,19}$
          type: string
        in_reply_to_user_id:
          description: Unique identifier of this User. This is returned as a string
            in order to avoid complications with languages and tools that cannot handle
            large integers.
          example: "2244994945"
          pattern: ^[0-9]{1,19}$
          type: string
        conversation_id:
          description: Unique identifier of this Tweet. This is returned as a string
            in order to avoid complications with languages and tools that cannot handle
            large integers.
          example: "1346889436626259968"
          pattern: ^[0-9]{1,19}$
          type: string
        reply_settings:
          $ref: '#/components/schemas/ReplySettings'
        referenced_tweets:
          description: A list of Tweets this Tweet refers to. For example, if the
            parent Tweet is a Retweet, a Quoted Tweet or a Reply, it will include
            the related Tweet referenced to by its parent.
          items:
            $ref: '#/components/schemas/Tweet_referenced_tweets'
          minItems: 1
          type: array
        attachments:
          $ref: '#/components/schemas/Tweet_attachments'
        context_annotations:
          items:
            $ref: '#/components/schemas/ContextAnnotation'
          minItems: 1
          type: array
        withheld:
          $ref: '#/components/schemas/TweetWithheld'
        geo:
          $ref: '#/components/schemas/Tweet_geo'
        entities:
          $ref: '#/components/schemas/FullTextEntities'
        public_metrics:
          $ref: '#/components/schemas/Tweet_public_metrics'
        possibly_sensitive:
          description: Indicates if this Tweet contains URLs marked as sensitive,
            for example content suitable for mature audiences.
          example: false
          type: boolean
        lang:
          description: Language of the Tweet, if detected by Twitter. Returned as
            a BCP47 language tag.
          example: en
          type: string
        source:
          description: The name of the app the user Tweeted from.
          type: string
        non_public_metrics:
          $ref: '#/components/schemas/Tweet_non_public_metrics'
        promoted_metrics:
          $ref: '#/components/schemas/Tweet_promoted_metrics'
        organic_metrics:
          $ref: '#/components/schemas/Tweet_organic_metrics'
      required:
      - id
      - text
      type: object
    User:
      description: The Twitter User object
      example:
        id: "2244994945"
        created_at: 2013-12-14T04:35:55Z
        name: Twitter Dev
        username: TwitterDev
        protected: false
      properties:
        id:
          description: Unique identifier of this User. This is returned as a string
            in order to avoid complications with languages and tools that cannot handle
            large integers.
          example: "2244994945"
          pattern: ^[0-9]{1,19}$
          type: string
        created_at:
          description: Creation time of this user.
          format: date-time
          type: string
        name:
          description: The friendly name of this user, as shown on their profile.
          type: string
        username:
          description: The Twitter handle (screen name) of this user.
          pattern: ^[A-Za-z0-9_]{1,15}$
          type: string
        protected:
          description: Indicates if this user has chosen to protect their Tweets (in
            other words, if this user's Tweets are private).
          type: boolean
        verified:
          description: Indicate if this user is a verified Twitter User.
          type: boolean
        withheld:
          $ref: '#/components/schemas/UserWithheld'
        profile_image_url:
          description: The URL to the profile image for this user.
          format: uri
          type: string
        location:
          description: The location specified in the user's profile, if the user provided
            one. As this is a freeform value, it may not indicate a valid location,
            but it may be fuzzily evaluated when performing searches with location
            queries.
          type: string
        url:
          description: The URL specified in the user's profile.
          type: string
        description:
          description: The text of this user's profile description (also known as
            bio), if the user provided one.
          type: string
        entities:
          $ref: '#/components/schemas/User_entities'
        pinned_tweet_id:
          description: Unique identifier of this Tweet. This is returned as a string
            in order to avoid complications with languages and tools that cannot handle
            large integers.
          example: "1346889436626259968"
          pattern: ^[0-9]{1,19}$
          type: string
        public_metrics:
          $ref: '#/components/schemas/User_public_metrics'
      required:
      - id
      - name
      - username
    UserName:
      description: The Twitter handle (screen name) of this user.
      pattern: ^[A-Za-z0-9_]{1,15}$
      type: string
    MultiUserLookupResponse:
      example:
        data:
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          items:
            $ref: '#/components/schemas/User'
          minItems: 1
          type: array
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    SingleUserLookupResponse:
      example:
        data:
          id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/User'
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    MultiTweetLookupResponse:
      example:
        data:
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          items:
            $ref: '#/components/schemas/Tweet'
          type: array
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    SingleTweetLookupResponse:
      example:
        data:
          id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/Tweet'
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    Point:
      description: A [GeoJson Point](https://tools.ietf.org/html/rfc7946#section-3.1.2)
        geometry object.
      example:
        coordinates:
        - -105.18816086351444
        - 40.247749999999996
        type: Point
      properties:
        type:
          enum:
          - Point
          example: Point
          type: string
        coordinates:
          description: A [GeoJson Position](https://tools.ietf.org/html/rfc7946#section-3.1.1)
            in the format `[longitude,latitude]`.
          example:
          - -105.18816086351444
          - 40.247749999999996
          items:
            type: number
          maxItems: 2
          minItems: 2
          type: array
      required:
      - coordinates
      - type
      type: object
    Position:
      description: A [GeoJson Position](https://tools.ietf.org/html/rfc7946#section-3.1.1)
        in the format `[longitude,latitude]`.
      example:
      - -105.18816086351444
      - 40.247749999999996
      items:
        type: number
      maxItems: 2
      minItems: 2
      type: array
    Geo:
      example:
        bbox:
        - -105.193475
        - 39.60973
        - -105.053164
        - 39.761974
        geometry:
          coordinates:
          - -105.18816086351444
          - 40.247749999999996
          type: Point
        type: Feature
        properties: '{}'
      properties:
        type:
          enum:
          - Feature
          type: string
        bbox:
          example:
          - -105.193475
          - 39.60973
          - -105.053164
          - 39.761974
          items:
            format: double
            maximum: 180
            minimum: -180
            type: number
          maxItems: 4
          minItems: 4
          type: array
        geometry:
          $ref: '#/components/schemas/Point'
        properties:
          type: object
      required:
      - bbox
      - properties
      - type
      type: object
    PlaceId:
      description: The identifier for this place
      example: f7eb2fa2fea288b1
      type: string
    Place:
      example:
        geo:
          bbox:
          - -105.193475
          - 39.60973
          - -105.053164
          - 39.761974
          geometry:
            coordinates:
            - -105.18816086351444
            - 40.247749999999996
            type: Point
          type: Feature
          properties: '{}'
        country_code: US
        country: United States
        contained_within:
        - f7eb2fa2fea288b1
        - f7eb2fa2fea288b1
        full_name: Lakewood, CO
        place_type: city
        name: Lakewood
        id: f7eb2fa2fea288b1
      properties:
        id:
          description: The identifier for this place
          example: f7eb2fa2fea288b1
          type: string
        name:
          description: The human readable name of this place.
          example: Lakewood
          type: string
        country_code:
          description: A two-letter ISO 3166-1 alpha-2 country code
          example: US
          pattern: ^[A-Z]{2}$
          type: string
        place_type:
          $ref: '#/components/schemas/PlaceType'
        full_name:
          description: The full name of this place.
          example: Lakewood, CO
          type: string
        country:
          description: The full name of the county in which this place exists.
          example: United States
          type: string
        contained_within:
          items:
            $ref: '#/components/schemas/PlaceId'
          minItems: 1
          type: array
        geo:
          $ref: '#/components/schemas/Geo'
      required:
      - full_name
      - id
    PlaceType:
      enum:
      - poi
      - neighborhood
      - city
      - admin
      - country
      - unknown
      example: city
      type: string
    Poll:
      description: Represent a Poll attached to a Tweet
      example:
        voting_status: open
        duration_minutes: 5
        end_datetime: 2000-01-23T04:56:07.000+00:00
        options:
        - votes: 5
          position: 1
          label: label
        - votes: 5
          position: 1
          label: label
        - votes: 5
          position: 1
          label: label
        - votes: 5
          position: 1
          label: label
        id: "1365059861688410112"
      properties:
        id:
          description: Unique identifier of this poll.
          example: "1365059861688410112"
          pattern: ^[0-9]{1,19}$
          type: string
        options:
          items:
            $ref: '#/components/schemas/PollOption'
          maxItems: 4
          minItems: 2
          type: array
        voting_status:
          enum:
          - open
          - closed
          type: string
        end_datetime:
          format: date-time
          type: string
        duration_minutes:
          type: integer
      required:
      - id
      - options
      type: object
    PollId:
      description: Unique identifier of this poll.
      example: "1365059861688410112"
      pattern: ^[0-9]{1,19}$
      type: string
    PollOption:
      description: Describes a choice in a Poll object.
      example:
        votes: 5
        position: 1
        label: label
      properties:
        position:
          description: Position of this choice in the poll.
          type: integer
        label:
          description: The text of a poll choice.
          maxLength: 25
          minLength: 1
          type: string
        votes:
          description: Number of users who voted for this choice.
          type: integer
      required:
      - label
      - position
      - votes
      type: object
    PollOptionLabel:
      description: The text of a poll choice.
      maxLength: 25
      minLength: 1
      type: string
    DurationMinutes:
      description: Duration of the poll in minutes.
      format: int32
      maximum: 10080
      minimum: 5
      type: integer
    List:
      description: A Twitter List is a curated group of accounts.
      example:
        private: true
        owner_id: "2244994945"
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        id: "1146654567674912769"
        member_count: 6
        follower_count: 0
      properties:
        id:
          $ref: '#/components/schemas/ListID'
        name:
          description: The name of this List.
          type: string
        created_at:
          format: date-time
          type: string
        description:
          type: string
        follower_count:
          type: integer
        member_count:
          type: integer
        owner_id:
          $ref: '#/components/schemas/UserID'
        private:
          type: boolean
      required:
      - id
      - name
      type: object
    ListID:
      description: The unique identifier of this List.
      example: "1146654567674912769"
      pattern: ^[0-9]{1,19}$
      type: string
    ListCreateRequest:
      example:
        private: true
        name: name
        description: description
      properties:
        name:
          type: string
        description:
          type: string
        private:
          type: boolean
      required:
      - name
      type: object
    ListCreateResponse:
      example:
        data:
          private: true
          owner_id: "2244994945"
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: "1146654567674912769"
          member_count: 6
          follower_count: 0
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/List'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    ListDeleteResponse:
      example:
        data:
          deleted: true
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/ListDeleteResponse_data'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    ListUpdateRequest:
      example:
        private: true
        name: name
        description: description
      properties:
        name:
          type: string
        description:
          type: string
        private:
          type: boolean
      type: object
    ListUpdateResponse:
      example:
        data:
          updated: true
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/ListUpdateResponse_data'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    ListAddMemberRequest:
      example:
        user_id: "2244994945"
      properties:
        user_id:
          description: Unique identifier of this User. This is returned as a string
            in order to avoid complications with languages and tools that cannot handle
            large integers.
          example: "2244994945"
          pattern: ^[0-9]{1,19}$
          type: string
      type: object
    ListMemberResponse:
      example:
        data:
          member: true
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/ListMemberResponse_data'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    ListFollowRequest:
      example:
        list_id: "1146654567674912769"
      properties:
        list_id:
          description: The unique identifier of this List.
          example: "1146654567674912769"
          pattern: ^[0-9]{1,19}$
          type: string
      type: object
    ListFollowedResponse:
      example:
        data:
          following: true
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/ListFollowedResponse_data'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    ListPinRequest:
      example:
        list_id: "1146654567674912769"
      properties:
        list_id:
          description: The unique identifier of this List.
          example: "1146654567674912769"
          pattern: ^[0-9]{1,19}$
          type: string
      type: object
    ListPinnedResponse:
      example:
        data:
          pinned: true
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/ListPinnedResponse_data'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    SingleListLookupResponse:
      example:
        data:
          private: true
          owner_id: "2244994945"
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: "1146654567674912769"
          member_count: 6
          follower_count: 0
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/List'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    MultiListResponse:
      example:
        data:
        - private: true
          owner_id: "2244994945"
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: "1146654567674912769"
          member_count: 6
          follower_count: 0
        - private: true
          owner_id: "2244994945"
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: "1146654567674912769"
          member_count: 6
          follower_count: 0
        meta:
          previous_token: previous_token
          next_token: next_token
          result_count: 1
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          items:
            $ref: '#/components/schemas/List'
          minItems: 0
          type: array
        meta:
          $ref: '#/components/schemas/MultiListResponse_meta'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    MultiListNoPaginationResponse:
      example:
        data:
        - private: true
          owner_id: "2244994945"
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: "1146654567674912769"
          member_count: 6
          follower_count: 0
        - private: true
          owner_id: "2244994945"
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          id: "1146654567674912769"
          member_count: 6
          follower_count: 0
        meta:
          result_count: 0
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          items:
            $ref: '#/components/schemas/List'
          minItems: 0
          type: array
        meta:
          $ref: '#/components/schemas/MultiListNoPaginationResponse_meta'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    TweetDeleteResponse:
      example:
        data:
          deleted: true
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/TweetDeleteResponse_data'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    TweetCreateResponse:
      example:
        data:
          id: "1346889436626259968"
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/TweetCreateResponse_data'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    Media:
      discriminator:
        mapping:
          photo: '#/components/schemas/Photo'
          video: '#/components/schemas/Video'
          animated_gif: '#/components/schemas/AnimatedGif'
        propertyName: type
      example:
        width: 0
        type: type
        media_key: media_key
        height: 0
      properties:
        type:
          type: string
        media_key:
          description: The Media Key identifier for this attachment.
          pattern: ^([0-9]+)_([0-9]+)$
          type: string
        height:
          description: The height of the media in pixels
          minimum: 0
          type: integer
        width:
          description: The width of the media in pixels
          minimum: 0
          type: integer
      required:
      - type
    MediaId:
      description: The unique identifier of this Media.
      example: "1146654567674912769"
      pattern: ^[0-9]{1,19}$
      type: string
    Photo:
      allOf:
      - $ref: '#/components/schemas/Media'
      - $ref: '#/components/schemas/Photo_allOf'
      type: object
    Video:
      allOf:
      - $ref: '#/components/schemas/Media'
      - $ref: '#/components/schemas/Video_allOf'
      type: object
    AnimatedGif:
      allOf:
      - $ref: '#/components/schemas/Media'
      - $ref: '#/components/schemas/AnimatedGif_allOf'
      type: object
    MediaKey:
      description: The Media Key identifier for this attachment.
      pattern: ^([0-9]+)_([0-9]+)$
      type: string
    TweetWithheld:
      description: Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).
      properties:
        copyright:
          description: Indicates if the content is being withheld for on the basis
            of copyright infringement.
          type: boolean
        country_codes:
          description: Provides a list of countries where this content is not available.
          items:
            $ref: '#/components/schemas/CountryCode'
          minItems: 1
          type: array
          uniqueItems: true
        scope:
          description: Indicates whether the content being withheld is the `tweet`
            or a `user`.
          enum:
          - tweet
          - user
          type: string
      required:
      - copyright
      - country_codes
      type: object
    UserWithheld:
      description: Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).
      properties:
        country_codes:
          description: Provides a list of countries where this content is not available.
          items:
            $ref: '#/components/schemas/CountryCode'
          minItems: 1
          type: array
          uniqueItems: true
        scope:
          description: Indicates that the content being withheld is a `user`.
          enum:
          - user
          type: string
      required:
      - country_codes
      type: object
    CountryCode:
      description: A two-letter ISO 3166-1 alpha-2 country code
      example: US
      pattern: ^[A-Z]{2}$
      type: string
    GenericProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      - $ref: '#/components/schemas/GenericProblem_allOf'
      description: A generic problem with no additional information beyond that provided
        by the HTTP status code.
    InvalidRequestProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      - $ref: '#/components/schemas/InvalidRequestProblem_allOf'
      description: A problem that indicates this request is invalid.
    ResourceNotFoundProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      - $ref: '#/components/schemas/ResourceNotFoundProblem_allOf'
      description: A problem that indicates that a given Tweet, User, etc. does not
        exist.
    ResourceUnauthorizedProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      - $ref: '#/components/schemas/ResourceUnauthorizedProblem_allOf'
      description: A problem that indicates you are not allowed to see a particular
        Tweet, User, etc.
      type: object
    ResourceUnavailableProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      - $ref: '#/components/schemas/ResourceUnavailableProblem_allOf'
      description: A problem that indicates a particular Tweet, User, etc. is not
        available to you.
    FieldUnauthorizedProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      - $ref: '#/components/schemas/FieldUnauthorizedProblem_allOf'
      description: A problem that indicates that you are not allowed to see a particular
        field on a Tweet, User, etc.
      type: object
    ClientForbiddenProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      - $ref: '#/components/schemas/ClientForbiddenProblem_allOf'
      description: A problem that indicates your client is forbidden from making this
        request.
      type: object
    DisallowedResourceProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      - $ref: '#/components/schemas/DisallowedResourceProblem_allOf'
      description: A problem that indicates that the resource requested violates the
        precepts of this API.
      type: object
    UnsupportedAuthenticationProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      description: A problem that indicates that the authentication used is not supported.
      type: object
    UsageCapExceededProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      - $ref: '#/components/schemas/UsageCapExceededProblem_allOf'
      description: A problem that indicates that a usage cap has been exceeded.
      type: object
    ConnectionExceptionProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      - $ref: '#/components/schemas/ConnectionExceptionProblem_allOf'
      description: A problem that indicates something is wrong with the connection
      type: object
    ClientDisconnectedProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      description: Your client has gone away.
      type: object
    OperationalDisconnectProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      - $ref: '#/components/schemas/OperationalDisconnectProblem_allOf'
      description: You have been disconnected for operational reasons.
      type: object
    RulesCapProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      description: You have exceeded the maximum number of rules.
      type: object
    InvalidRuleProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      description: The rule you have submitted is invalid.
      type: object
    DuplicateRuleProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      description: The rule you have submitted is a duplicate.
      type: object
    ConflictProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      description: You cannot create a new job if one is already in progress.
      type: object
    NonCompliantRulesProblem:
      allOf:
      - $ref: '#/components/schemas/Problem'
      description: A problem that indicates the user's rule set is not compliant.
    Problem:
      description: An HTTP Problem Details object, as defined in IETF RFC 7807 (https://tools.ietf.org/html/rfc7807).
      discriminator:
        mapping:
          about:blank: '#/components/schemas/GenericProblem'
          https://api.twitter.com/2/problems/invalid-request: '#/components/schemas/InvalidRequestProblem'
          https://api.twitter.com/2/problems/client-forbidden: '#/components/schemas/ClientForbiddenProblem'
          https://api.twitter.com/2/problems/resource-not-found: '#/components/schemas/ResourceNotFoundProblem'
          https://api.twitter.com/2/problems/resource-unavailable: '#/components/schemas/ResourceUnavailableProblem'
          https://api.twitter.com/2/problems/not-authorized-for-resource: '#/components/schemas/ResourceUnauthorizedProblem'
          https://api.twitter.com/2/problems/not-authorized-for-field: '#/components/schemas/FieldUnauthorizedProblem'
          https://api.twitter.com/2/problems/disallowed-resource: '#/components/schemas/DisallowedResourceProblem'
          https://api.twitter.com/2/problems/unsupported-authentication: '#/components/schemas/UnsupportedAuthenticationProblem'
          https://api.twitter.com/2/problems/usage-capped: '#/components/schemas/UsageCapExceededProblem'
          https://api.twitter.com/2/problems/streaming-connection: '#/components/schemas/ConnectionExceptionProblem'
          https://api.twitter.com/2/problems/client-disconnected: '#/components/schemas/ClientDisconnectedProblem'
          https://api.twitter.com/2/problems/operational-disconnect: '#/components/schemas/OperationalDisconnectProblem'
          https://api.twitter.com/2/problems/rule-cap: '#/components/schemas/RulesCapProblem'
          https://api.twitter.com/2/problems/invalid-rules: '#/components/schemas/InvalidRuleProblem'
          https://api.twitter.com/2/problems/duplicate-rules: '#/components/schemas/DuplicateRuleProblem'
          https://api.twitter.com/2/problems/conflict: '#/components/schemas/ConflictProblem'
          https://api.twitter.com/2/problems/noncompliant-rules: '#/components/schemas/NonCompliantRulesProblem'
        propertyName: type
      example:
        detail: detail
        type: type
        title: title
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
      required:
      - detail
      - title
      - type
      type: object
    TweetSearchResponse:
      example:
        data:
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        meta:
          oldest_id: oldest_id
          newest_id: newest_id
          next_token: next_token
          result_count: 0
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          items:
            $ref: '#/components/schemas/Tweet'
          minItems: 1
          type: array
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
        meta:
          $ref: '#/components/schemas/TweetSearchResponse_meta'
      type: object
    StreamingTweet:
      description: A tweet or error that can be returned by the streaming tweet API.
      oneOf:
      - $ref: '#/components/schemas/SingleTweetLookupResponse'
      - $ref: '#/components/schemas/StreamingTweet_oneOf'
      type: object
    FilteredStreamingTweet:
      description: A tweet or error that can be returned by the streaming tweet API
      oneOf:
      - $ref: '#/components/schemas/FilteredStreamingTweet_oneOf'
      - $ref: '#/components/schemas/StreamingTweet_oneOf'
      type: object
    RuleId:
      description: Unique identifier of this rule.
      example: "120897978112909812"
      pattern: ^[0-9]{1,19}$
      type: string
    Rule:
      description: A user-provided stream filtering rule.
      example:
        tag: Non-retweeted coffee tweets
        id: "120897978112909812"
        value: coffee -is:retweet
      properties:
        value:
          description: The filterlang value of the rule.
          example: coffee -is:retweet
          type: string
        tag:
          description: A tag meant for the labeling of user provided rules.
          example: Non-retweeted coffee tweets
          type: string
        id:
          description: Unique identifier of this rule.
          example: "120897978112909812"
          pattern: ^[0-9]{1,19}$
          type: string
      required:
      - value
      type: object
    RuleNoId:
      description: A user-provided stream filtering rule.
      properties:
        value:
          description: The filterlang value of the rule.
          example: coffee -is:retweet
          type: string
        tag:
          description: A tag meant for the labeling of user provided rules.
          example: Non-retweeted coffee tweets
          type: string
      required:
      - value
      type: object
    RuleTag:
      description: A tag meant for the labeling of user provided rules.
      example: Non-retweeted coffee tweets
      type: string
    RuleValue:
      description: The filterlang value of the rule.
      example: coffee -is:retweet
      type: string
    RulesResponseMetadata:
      example:
        next_token: next_token
        sent: sent
        result_count: 0
      properties:
        sent:
          type: string
        summary:
          $ref: '#/components/schemas/RulesRequestSummary'
        next_token:
          description: This parameter is used to get the next 'page' of results. The
            value used with the parameter is pulled directly from the response provided
            by the API, and should not be modified.
          minLength: 1
          type: string
        result_count:
          description: Number of Rules in result set
          format: int32
          type: integer
      required:
      - sent
      type: object
    RulesRequestSummary:
      oneOf:
      - $ref: '#/components/schemas/RulesRequestSummary_oneOf'
      - $ref: '#/components/schemas/RulesRequestSummary_oneOf_1'
      type: object
    AddOrDeleteRulesRequest:
      oneOf:
      - $ref: '#/components/schemas/AddRulesRequest'
      - $ref: '#/components/schemas/DeleteRulesRequest'
      type: object
    AddOrDeleteRulesResponse:
      oneOf:
      - $ref: '#/components/schemas/AddRulesResponse'
      - $ref: '#/components/schemas/DeleteRulesResponse'
      type: object
    AddRulesRequest:
      description: A request to add a user-specified stream filtering rule.
      properties:
        add:
          items:
            $ref: '#/components/schemas/RuleNoId'
          type: array
      required:
      - add
      type: object
    AddRulesResponse:
      description: A response from adding user-specified stream filtering rules.
      properties:
        data:
          description: All user-specified stream filtering rules that were created.
          items:
            $ref: '#/components/schemas/Rule'
          type: array
        meta:
          $ref: '#/components/schemas/RulesResponseMetadata'
      required:
      - data
      - meta
      type: object
    DeleteRulesRequest:
      description: A response from deleting user-specified stream filtering rules.
      properties:
        delete:
          $ref: '#/components/schemas/DeleteRulesRequest_delete'
      required:
      - delete
      type: object
    DeleteRulesResponse:
      properties:
        meta:
          $ref: '#/components/schemas/RulesResponseMetadata'
      required:
      - meta
      type: object
    GenericTweetsTimelineResponse:
      example:
        data:
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        meta:
          oldest_id: "1346889436626259968"
          previous_token: previous_token
          newest_id: "1346889436626259968"
          next_token: next_token
          result_count: 0
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          items:
            $ref: '#/components/schemas/Tweet'
          minItems: 1
          type: array
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
        meta:
          $ref: '#/components/schemas/GenericTweetsTimelineResponse_meta'
      type: object
    UsersBlockingMutationResponse:
      example:
        data:
          blocking: true
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/UsersBlockingMutationResponse_data'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    GenericMultipleUsersLookupResponse:
      example:
        data:
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        meta:
          previous_token: previous_token
          next_token: next_token
          result_count: 0
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          items:
            $ref: '#/components/schemas/User'
          type: array
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
        meta:
          $ref: '#/components/schemas/GenericMultipleUsersLookupResponse_meta'
      type: object
    ListLookupMultipleUsersLookupResponse:
      example:
        data:
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        meta:
          previous_token: previous_token
          next_token: next_token
          result_count: 0
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          items:
            $ref: '#/components/schemas/User'
          type: array
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
        meta:
          $ref: '#/components/schemas/ListLookupMultipleUsersLookupResponse_meta'
      type: object
    UsersMutingMutationResponse:
      example:
        data:
          muting: true
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/UsersMutingMutationResponse_data'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    UsersFollowingLookupResponse:
      example:
        data:
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        - id: "2244994945"
          created_at: 2013-12-14T04:35:55Z
          name: Twitter Dev
          username: TwitterDev
          protected: false
        meta:
          previous_token: previous_token
          next_token: next_token
          result_count: 0
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          items:
            $ref: '#/components/schemas/User'
          type: array
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
        meta:
          $ref: '#/components/schemas/GenericMultipleUsersLookupResponse_meta'
      type: object
    UsersFollowingCreateResponse:
      example:
        data:
          following: true
          pending_follow: true
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/UsersFollowingCreateResponse_data'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    UsersFollowingDeleteResponse:
      example:
        data:
          following: true
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/ListFollowedResponse_data'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    UsersLikesCreateRequest:
      example:
        tweet_id: tweet_id
      properties:
        tweet_id:
          pattern: ^[0-9]{1,19}$
          type: string
      required:
      - tweet_id
      type: object
    UsersLikesCreateResponse:
      example:
        data:
          liked: true
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/UsersLikesCreateResponse_data'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    UsersLikesDeleteResponse:
      example:
        data:
          liked: true
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/UsersLikesCreateResponse_data'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    UsersRetweetsCreateRequest:
      example:
        tweet_id: tweet_id
      properties:
        tweet_id:
          pattern: ^[0-9]{1,19}$
          type: string
      required:
      - tweet_id
      type: object
    UsersRetweetsCreateResponse:
      example:
        data:
          retweeted: true
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/UsersRetweetsCreateResponse_data'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    UsersRetweetsDeleteResponse:
      example:
        data:
          retweeted: true
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/UsersRetweetsCreateResponse_data'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    TweetCountsResponse:
      example:
        data:
        - tweet_count: 0
          start: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
        - tweet_count: 0
          start: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
        meta:
          total_tweet_count: 6
          next_token: next_token
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          items:
            $ref: '#/components/schemas/SearchCount'
          minItems: 1
          type: array
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
        meta:
          $ref: '#/components/schemas/TweetCountsResponse_meta'
      type: object
    SearchCount:
      description: Represent a Search Count Result
      example:
        tweet_count: 0
        start: 2000-01-23T04:56:07.000+00:00
        end: 2000-01-23T04:56:07.000+00:00
      properties:
        end:
          description: The end time of the bucket
          format: date-time
          type: string
        start:
          description: The start time of the bucket
          format: date-time
          type: string
        tweet_count:
          description: The count for the bucket
          type: integer
      required:
      - end
      - start
      - tweet_count
      type: object
    Start:
      description: The start time of the bucket
      format: date-time
      type: string
    End:
      description: The end time of the bucket
      format: date-time
      type: string
    TweetCount:
      description: The count for the bucket
      type: integer
    Granularity:
      default: hour
      enum:
      - minute
      - hour
      - day
      type: string
    JobId:
      description: Compliance Job ID
      example: "1372966999991541762"
      pattern: ^[0-9]{1,19}$
      type: string
    CreatedAt:
      description: Creation time of the compliance job.
      example: 2021-01-06T18:40:40Z
      format: date-time
      type: string
    UploadUrl:
      description: URL to which the user will upload their tweet or user IDs
      format: uri
      type: string
    DownloadUrl:
      description: URL from which the user will retrieve their compliance results
      format: uri
      type: string
    UploadExpiration:
      description: Expiration time of the upload URL
      example: 2021-01-06T18:40:40Z
      format: date-time
      type: string
    DownloadExpiration:
      description: Expiration time of the download URL
      example: 2021-01-06T18:40:40Z
      format: date-time
      type: string
    ComplianceJobName:
      description: User-provided name for a compliance job
      example: my-job
      maxLength: 64
      type: string
    ComplianceJobStatus:
      description: Status of a compliance job
      enum:
      - created
      - in_progress
      - failed
      - complete
      type: string
    ComplianceJobType:
      description: Type of compliance job to list.
      enum:
      - tweets
      - users
      type: string
    ComplianceJob:
      example:
        download_expires_at: 2021-01-06T18:40:40Z
        upload_expires_at: 2021-01-06T18:40:40Z
        download_url: https://openapi-generator.tech
        name: my-job
        created_at: 2021-01-06T18:40:40Z
        upload_url: https://openapi-generator.tech
        id: "1372966999991541762"
      properties:
        id:
          description: Compliance Job ID
          example: "1372966999991541762"
          pattern: ^[0-9]{1,19}$
          type: string
        type:
          $ref: '#/components/schemas/ComplianceJobType'
        created_at:
          description: Creation time of the compliance job.
          example: 2021-01-06T18:40:40Z
          format: date-time
          type: string
        upload_url:
          description: URL to which the user will upload their tweet or user IDs
          format: uri
          type: string
        upload_expires_at:
          description: Expiration time of the upload URL
          example: 2021-01-06T18:40:40Z
          format: date-time
          type: string
        download_url:
          description: URL from which the user will retrieve their compliance results
          format: uri
          type: string
        download_expires_at:
          description: Expiration time of the download URL
          example: 2021-01-06T18:40:40Z
          format: date-time
          type: string
        name:
          description: User-provided name for a compliance job
          example: my-job
          maxLength: 64
          type: string
        status:
          $ref: '#/components/schemas/ComplianceJobStatus'
      required:
      - created_at
      - download_expires_at
      - download_url
      - id
      - status
      - type
      - upload_expires_at
      - upload_url
      type: object
    SingleComplianceJobResponse:
      example:
        data:
          download_expires_at: 2021-01-06T18:40:40Z
          upload_expires_at: 2021-01-06T18:40:40Z
          download_url: https://openapi-generator.tech
          name: my-job
          created_at: 2021-01-06T18:40:40Z
          upload_url: https://openapi-generator.tech
          id: "1372966999991541762"
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/ComplianceJob'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    MultiComplianceJobResponse:
      example:
        data:
        - download_expires_at: 2021-01-06T18:40:40Z
          upload_expires_at: 2021-01-06T18:40:40Z
          download_url: https://openapi-generator.tech
          name: my-job
          created_at: 2021-01-06T18:40:40Z
          upload_url: https://openapi-generator.tech
          id: "1372966999991541762"
        - download_expires_at: 2021-01-06T18:40:40Z
          upload_expires_at: 2021-01-06T18:40:40Z
          download_url: https://openapi-generator.tech
          name: my-job
          created_at: 2021-01-06T18:40:40Z
          upload_url: https://openapi-generator.tech
          id: "1372966999991541762"
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          items:
            $ref: '#/components/schemas/ComplianceJob'
          minItems: 0
          type: array
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 0
          type: array
      type: object
    Space:
      example:
        topics:
        - id: "848920371311001600"
          description: All about technology
          name: Technology
        - id: "848920371311001600"
          description: All about technology
          name: Technology
        scheduled_start: 2021-07-06T18:40:40Z
        created_at: 2021-07-06T18:40:40Z
        is_ticketed: false
        title: Spaces are Awesome
        invited_user_ids:
        - "2244994945"
        - "2244994945"
        speaker_ids:
        - "2244994945"
        - "2244994945"
        participant_count: 10
        updated_at: 2000-01-23T04:56:07.000+00:00
        subscriber_count: 10
        creator_id: "2244994945"
        started_at: 2000-01-23T04:56:07.000+00:00
        id: 1SLjjRYNejbKM
        state: live
        host_ids:
        - "2244994945"
        - "2244994945"
        lang: en
        ended_at: 2021-07-06T18:40:40Z
      properties:
        id:
          description: The unique identifier of this Space.
          example: 1SLjjRYNejbKM
          pattern: ^[a-zA-Z0-9]{1,13}$
          type: string
        state:
          description: The current state of the space.
          enum:
          - live
          - scheduled
          - ended
          example: live
          type: string
        started_at:
          description: When the space was started as a date string
          format: date-time
          type: string
        is_ticketed:
          description: Denotes if the space is a ticketed space
          example: false
          type: boolean
        participant_count:
          description: The number of participants in a space
          example: 10
          format: int32
          type: integer
        title:
          description: The title of the space
          example: Spaces are Awesome
          type: string
        host_ids:
          description: The user ids for the hosts of the space
          items:
            $ref: '#/components/schemas/UserID'
          type: array
        updated_at:
          description: When the space was last updated
          format: date-time
          type: string
        created_at:
          description: Creation time of the space
          example: 2021-07-06T18:40:40Z
          format: date-time
          type: string
        creator_id:
          description: Unique identifier of this User. This is returned as a string
            in order to avoid complications with languages and tools that cannot handle
            large integers.
          example: "2244994945"
          pattern: ^[0-9]{1,19}$
          type: string
        lang:
          description: The language of the space
          example: en
          type: string
        speaker_ids:
          description: An array of user ids for people who were speakers in a space
          items:
            $ref: '#/components/schemas/UserID'
          type: array
        invited_user_ids:
          description: An array of user ids for people who were invited to a space
          items:
            $ref: '#/components/schemas/UserID'
          type: array
        scheduled_start:
          description: A date time stamp for when a space is scheduled to begin
          example: 2021-07-06T18:40:40Z
          format: date-time
          type: string
        ended_at:
          description: End time of the space
          example: 2021-07-06T18:40:40Z
          format: date-time
          type: string
        topics:
          description: The topics of a space, as selected by its creator
          items:
            $ref: '#/components/schemas/Space_topics'
          type: array
        subscriber_count:
          description: The number of people who have either purchased a ticket or
            set a reminder for this space.
          example: 10
          format: int32
          type: integer
      required:
      - id
      - state
      type: object
    SingleSpaceLookupResponse:
      example:
        data:
          topics:
          - id: "848920371311001600"
            description: All about technology
            name: Technology
          - id: "848920371311001600"
            description: All about technology
            name: Technology
          scheduled_start: 2021-07-06T18:40:40Z
          created_at: 2021-07-06T18:40:40Z
          is_ticketed: false
          title: Spaces are Awesome
          invited_user_ids:
          - "2244994945"
          - "2244994945"
          speaker_ids:
          - "2244994945"
          - "2244994945"
          participant_count: 10
          updated_at: 2000-01-23T04:56:07.000+00:00
          subscriber_count: 10
          creator_id: "2244994945"
          started_at: 2000-01-23T04:56:07.000+00:00
          id: 1SLjjRYNejbKM
          state: live
          host_ids:
          - "2244994945"
          - "2244994945"
          lang: en
          ended_at: 2021-07-06T18:40:40Z
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          $ref: '#/components/schemas/Space'
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    MultiSpaceLookupResponse:
      example:
        data:
        - topics:
          - id: "848920371311001600"
            description: All about technology
            name: Technology
          - id: "848920371311001600"
            description: All about technology
            name: Technology
          scheduled_start: 2021-07-06T18:40:40Z
          created_at: 2021-07-06T18:40:40Z
          is_ticketed: false
          title: Spaces are Awesome
          invited_user_ids:
          - "2244994945"
          - "2244994945"
          speaker_ids:
          - "2244994945"
          - "2244994945"
          participant_count: 10
          updated_at: 2000-01-23T04:56:07.000+00:00
          subscriber_count: 10
          creator_id: "2244994945"
          started_at: 2000-01-23T04:56:07.000+00:00
          id: 1SLjjRYNejbKM
          state: live
          host_ids:
          - "2244994945"
          - "2244994945"
          lang: en
          ended_at: 2021-07-06T18:40:40Z
        - topics:
          - id: "848920371311001600"
            description: All about technology
            name: Technology
          - id: "848920371311001600"
            description: All about technology
            name: Technology
          scheduled_start: 2021-07-06T18:40:40Z
          created_at: 2021-07-06T18:40:40Z
          is_ticketed: false
          title: Spaces are Awesome
          invited_user_ids:
          - "2244994945"
          - "2244994945"
          speaker_ids:
          - "2244994945"
          - "2244994945"
          participant_count: 10
          updated_at: 2000-01-23T04:56:07.000+00:00
          subscriber_count: 10
          creator_id: "2244994945"
          started_at: 2000-01-23T04:56:07.000+00:00
          id: 1SLjjRYNejbKM
          state: live
          host_ids:
          - "2244994945"
          - "2244994945"
          lang: en
          ended_at: 2021-07-06T18:40:40Z
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          items:
            $ref: '#/components/schemas/Space'
          minItems: 0
          type: array
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
      type: object
    MaxResults:
      description: The number of results to return
      example: 25
      format: int32
      maximum: 100
      minimum: 1
      type: integer
    UsersIdBlockRequest:
      example:
        target_user_id: target_user_id
      properties:
        target_user_id:
          pattern: ^[0-9]{1,19}$
          title: UsersIdBlockRequestTargetUserId
          type: string
      required:
      - target_user_id
      title: UsersIdBlockRequest
      type: object
    UsersIdMuteRequest:
      example:
        target_user_id: target_user_id
      properties:
        target_user_id:
          pattern: ^[0-9]{1,19}$
          title: UsersIdMuteRequestTargetUserId
          type: string
      required:
      - target_user_id
      title: UsersIdMuteRequest
      type: object
    UsersIdFollowRequest:
      example:
        target_user_id: target_user_id
      properties:
        target_user_id:
          pattern: ^[0-9]{1,19}$
          title: UsersIdFollowRequestTargetUserId
          type: string
      required:
      - target_user_id
      title: UsersIdFollowRequest
      type: object
    CreateTweetRequestReply:
      description: Tweet information of the Tweet being replied to.
      example:
        exclude_reply_user_ids:
        - "2244994945"
        - "2244994945"
        in_reply_to_tweet_id: "1346889436626259968"
      properties:
        in_reply_to_tweet_id:
          description: Unique identifier of this Tweet. This is returned as a string
            in order to avoid complications with languages and tools that cannot handle
            large integers.
          example: "1346889436626259968"
          pattern: ^[0-9]{1,19}$
          type: string
        exclude_reply_user_ids:
          description: A list of User Ids to be excluded from the reply Tweet.
          items:
            $ref: '#/components/schemas/UserID'
          type: array
      title: CreateTweetRequestReply
      type: object
    CreateTweetRequestMedia:
      description: Media information being attached to created Tweet. This is mutually
        exclusive from Quote Tweet Id and Poll.
      example:
        media_ids:
        - "1146654567674912769"
        - "1146654567674912769"
        tagged_user_ids:
        - "2244994945"
        - "2244994945"
      properties:
        media_ids:
          description: A list of Media Ids to be attached to a created Tweet.
          items:
            $ref: '#/components/schemas/MediaId'
          type: array
        tagged_user_ids:
          description: A list of User Ids to be tagged in the media for created Tweet.
          items:
            $ref: '#/components/schemas/UserID'
          type: array
      title: CreateTweetRequestMedia
      type: object
    CreateTweetRequestPoll:
      description: Poll options for a Tweet with a poll. This is mutually exclusive
        from Media and Quote Tweet Id.
      example:
        duration_minutes: 811
        options:
        - null
        - null
      properties:
        options:
          items:
            $ref: '#/components/schemas/PollOptionLabel'
          type: array
        duration_minutes:
          description: Duration of the poll in minutes.
          format: int32
          maximum: 10080
          minimum: 5
          type: integer
      title: CreateTweetRequestPoll
      type: object
    CreateTweetRequestGeo:
      description: Place ID being attached to the Tweet for geo location.
      example:
        place_id: place_id
      properties:
        place_id:
          type: string
      title: CreateTweetRequestGeo
      type: object
    CreateTweetRequest:
      example:
        geo:
          place_id: place_id
        quote_tweet_id: "1346889436626259968"
        for_super_followers_only: true
        direct_message_deep_link: direct_message_deep_link
        text: Learn how to use the user Tweet timeline and user mention timeline endpoints
          in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
        media:
          media_ids:
          - "1146654567674912769"
          - "1146654567674912769"
          tagged_user_ids:
          - "2244994945"
          - "2244994945"
        poll:
          duration_minutes: 811
          options:
          - null
          - null
        reply:
          exclude_reply_user_ids:
          - "2244994945"
          - "2244994945"
          in_reply_to_tweet_id: "1346889436626259968"
        reply_settings: following
      properties:
        text:
          description: The content of the Tweet.
          example: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          type: string
        direct_message_deep_link:
          description: Link to take the conversation from the public timeline to a
            private Direct Message.
          title: CreateTweetRequestDirectMessageDeepLink
          type: string
        quote_tweet_id:
          description: Unique identifier of this Tweet. This is returned as a string
            in order to avoid complications with languages and tools that cannot handle
            large integers.
          example: "1346889436626259968"
          pattern: ^[0-9]{1,19}$
          type: string
        for_super_followers_only:
          description: Exclusive Tweet for super followers.
          title: CreateTweetRequestForSuperFollowersOnly
          type: boolean
        reply:
          $ref: '#/components/schemas/CreateTweetRequestReply'
        media:
          $ref: '#/components/schemas/CreateTweetRequestMedia'
        poll:
          $ref: '#/components/schemas/CreateTweetRequestPoll'
        reply_settings:
          description: Settings to indicate who can reply to the Tweet.
          enum:
          - following
          - mentionedUsers
          title: CreateTweetRequestReplySettings
          type: string
        geo:
          $ref: '#/components/schemas/CreateTweetRequestGeo'
      title: CreateTweetRequest
      type: object
    HideReplyByIdRequest:
      example:
        hidden: true
      properties:
        hidden:
          title: HideReplyByIdRequestHidden
          type: boolean
      title: HideReplyByIdRequest
      type: object
    HideReplyByIdResponse_data:
      example:
        hidden: true
      properties:
        hidden:
          type: boolean
      type: object
    HideReplyByIdResponse:
      example:
        data:
          hidden: true
      properties:
        data:
          $ref: '#/components/schemas/HideReplyByIdResponse_data'
      title: HideReplyByIdResponse
      type: object
    GetRulesResponse:
      example:
        data:
        - tag: Non-retweeted coffee tweets
          id: "120897978112909812"
          value: coffee -is:retweet
        - tag: Non-retweeted coffee tweets
          id: "120897978112909812"
          value: coffee -is:retweet
        meta:
          next_token: next_token
          sent: sent
          result_count: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/Rule'
          type: array
        meta:
          $ref: '#/components/schemas/RulesResponseMetadata'
      required:
      - data
      - meta
      title: GetRulesResponse
      type: object
    UsersIdLikedTweetsResponse_meta:
      example:
        previous_token: previous_token
        next_token: next_token
        result_count: 0
      properties:
        previous_token:
          description: The previous token
          pattern: ^[a-zA-Z0-9]+$
          type: string
        next_token:
          description: The next token
          pattern: ^[a-zA-Z0-9]+$
          type: string
        result_count:
          description: Number of Tweets in result set
          format: int32
          type: integer
      type: object
    UsersIdLikedTweetsResponse:
      example:
        data:
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        meta:
          previous_token: previous_token
          next_token: next_token
          result_count: 0
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          items:
            $ref: '#/components/schemas/Tweet'
          minItems: 1
          type: array
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
        meta:
          $ref: '#/components/schemas/UsersIdLikedTweetsResponse_meta'
      title: UsersIdLikedTweetsResponse
      type: object
    CreateBatchComplianceJobRequest:
      description: A request to create a new batch compliance job.
      example:
        resumable: true
        name: my-job
      properties:
        type:
          $ref: '#/components/schemas/ComplianceJobType'
        resumable:
          description: If true, this endpoint will return a pre-signed URL with resumable
            uploads enabled
          title: CreateBatchComplianceJobRequestResumable
          type: boolean
        name:
          description: User-provided name for a compliance job
          example: my-job
          maxLength: 64
          type: string
      required:
      - type
      title: CreateBatchComplianceJobRequest
      type: object
    ListsIdTweetsResponse:
      example:
        data:
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        - id: "1346889436626259968"
          created_at: Wed Jan 06 18:40:40 +0000 2021
          text: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          author_id: "2244994945"
        meta:
          previous_token: previous_token
          next_token: next_token
          result_count: 0
        includes:
          places:
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          - geo:
              bbox:
              - -105.193475
              - 39.60973
              - -105.053164
              - 39.761974
              geometry:
                coordinates:
                - -105.18816086351444
                - 40.247749999999996
                type: Point
              type: Feature
              properties: '{}'
            country_code: US
            country: United States
            contained_within:
            - f7eb2fa2fea288b1
            - f7eb2fa2fea288b1
            full_name: Lakewood, CO
            place_type: city
            name: Lakewood
            id: f7eb2fa2fea288b1
          polls:
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          - voting_status: open
            duration_minutes: 5
            end_datetime: 2000-01-23T04:56:07.000+00:00
            options:
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            - votes: 5
              position: 1
              label: label
            id: "1365059861688410112"
          media:
          - width: 0
            type: type
            media_key: media_key
            height: 0
          - width: 0
            type: type
            media_key: media_key
            height: 0
          tweets:
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          - id: "1346889436626259968"
            created_at: Wed Jan 06 18:40:40 +0000 2021
            text: Learn how to use the user Tweet timeline and user mention timeline
              endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
            author_id: "2244994945"
          users:
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
          - id: "2244994945"
            created_at: 2013-12-14T04:35:55Z
            name: Twitter Dev
            username: TwitterDev
            protected: false
        errors:
        - detail: detail
          type: type
          title: title
        - detail: detail
          type: type
          title: title
      properties:
        data:
          items:
            $ref: '#/components/schemas/Tweet'
          minItems: 1
          type: array
        includes:
          $ref: '#/components/schemas/Expansions'
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          minItems: 1
          type: array
        meta:
          $ref: '#/components/schemas/UsersIdLikedTweetsResponse_meta'
      title: ListsIdTweetsResponse
      type: object
    Tweet_referenced_tweets:
      properties:
        type:
          enum:
          - retweeted
          - quoted
          - replied_to
          type: string
        id:
          description: Unique identifier of this Tweet. This is returned as a string
            in order to avoid complications with languages and tools that cannot handle
            large integers.
          example: "1346889436626259968"
          pattern: ^[0-9]{1,19}$
          type: string
      required:
      - id
      - type
      type: object
    Tweet_attachments:
      description: Specifies the type of attachments (if any) present in this Tweet.
      properties:
        media_keys:
          description: A list of Media Keys for each one of the media attachments
            (if media are attached).
          items:
            $ref: '#/components/schemas/MediaKey'
          minItems: 1
          type: array
        poll_ids:
          description: A list of poll IDs (if polls are attached).
          items:
            $ref: '#/components/schemas/PollId'
          minItems: 1
          type: array
      type: object
    Tweet_geo:
      description: The location tagged on the Tweet, if the user provided one.
      properties:
        coordinates:
          $ref: '#/components/schemas/Point'
        place_id:
          description: The identifier for this place
          example: f7eb2fa2fea288b1
          type: string
      type: object
    Tweet_public_metrics:
      description: Engagement metrics for the Tweet at the time of the request.
      properties:
        retweet_count:
          description: Number of times this Tweet has been Retweeted.
          type: integer
        reply_count:
          description: Number of times this Tweet has been replied to.
          type: integer
        like_count:
          description: Number of times this Tweet has been liked.
          type: integer
        quote_count:
          description: Number of times this Tweet has been quoted.
          type: integer
      required:
      - like_count
      - reply_count
      - retweet_count
      type: object
    Tweet_non_public_metrics:
      description: Nonpublic engagement metrics for the Tweet at the time of the request.
      properties:
        impression_count:
          description: Number of times this Tweet has been viewed.
          format: int32
          type: integer
      type: object
    Tweet_promoted_metrics:
      description: Promoted nonpublic engagement metrics for the Tweet at the time
        of the request.
      properties:
        impression_count:
          description: Number of times this Tweet has been viewed.
          format: int32
          type: integer
        like_count:
          description: Number of times this Tweet has been liked.
          format: int32
          type: integer
        reply_count:
          description: Number of times this Tweet has been replied to.
          format: int32
          type: integer
        retweet_count:
          description: Number of times this Tweet has been Retweeted.
          format: int32
          type: integer
      type: object
    Tweet_organic_metrics:
      description: Organic nonpublic engagement metrics for the Tweet at the time
        of the request.
      properties:
        impression_count:
          description: Number of times this Tweet has been viewed.
          type: integer
        retweet_count:
          description: Number of times this Tweet has been Retweeted.
          type: integer
        reply_count:
          description: Number of times this Tweet has been replied to.
          type: integer
        like_count:
          description: Number of times this Tweet has been liked.
          type: integer
      required:
      - impression_count
      - like_count
      - reply_count
      - retweet_count
      type: object
    User_entities_url:
      description: Expanded details for the URL specified in the user's profile, with
        start and end indices.
      properties:
        urls:
          items:
            $ref: '#/components/schemas/UrlEntity'
          minItems: 1
          type: array
      type: object
    User_entities:
      description: A list of metadata found in the user's profile description.
      properties:
        url:
          $ref: '#/components/schemas/User_entities_url'
        description:
          $ref: '#/components/schemas/FullTextEntities'
      type: object
    User_public_metrics:
      description: A list of metrics for this user
      properties:
        followers_count:
          description: Number of users who are following this user.
          type: integer
        following_count:
          description: Number of users this user is following.
          type: integer
        tweet_count:
          description: The number of Tweets (including Retweets) posted by this user.
          type: integer
        listed_count:
          description: The number of lists that include this user.
          type: integer
      required:
      - followers_count
      - following_count
      - listed_count
      - tweet_count
      type: object
    ListDeleteResponse_data:
      example:
        deleted: true
      properties:
        deleted:
          type: boolean
      type: object
    ListUpdateResponse_data:
      example:
        updated: true
      properties:
        updated:
          type: boolean
      type: object
    ListMemberResponse_data:
      example:
        member: true
      properties:
        member:
          type: boolean
      type: object
    ListFollowedResponse_data:
      example:
        following: true
      properties:
        following:
          type: boolean
      type: object
    ListPinnedResponse_data:
      example:
        pinned: true
      properties:
        pinned:
          type: boolean
      type: object
    MultiListResponse_meta:
      example:
        previous_token: previous_token
        next_token: next_token
        result_count: 1
      properties:
        previous_token:
          description: The previous token
          pattern: ^-?[0-9]{1,19}$
          type: string
        next_token:
          description: The next token
          pattern: ^-?[0-9]{1,19}$
          type: string
        result_count:
          description: The number of list results returned in this response
          type: integer
      type: object
    MultiListNoPaginationResponse_meta:
      example:
        result_count: 0
      properties:
        result_count:
          description: The number of list results returned in this response
          type: integer
      type: object
    TweetDeleteResponse_data:
      example:
        deleted: true
      properties:
        deleted:
          type: boolean
      required:
      - deleted
      type: object
    TweetCreateResponse_data:
      example:
        id: "1346889436626259968"
        text: Learn how to use the user Tweet timeline and user mention timeline endpoints
          in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
      properties:
        id:
          description: Unique identifier of this Tweet. This is returned as a string
            in order to avoid complications with languages and tools that cannot handle
            large integers.
          example: "1346889436626259968"
          pattern: ^[0-9]{1,19}$
          type: string
        text:
          description: The content of the Tweet.
          example: Learn how to use the user Tweet timeline and user mention timeline
            endpoints in the Twitter API v2 to explore Tweet\u2026 https:\/\/t.co\/56a0vZUx7i
          type: string
      required:
      - id
      - text
      type: object
    Photo_allOf:
      properties:
        url:
          format: uri
          type: string
        alt_text:
          type: string
      type: object
    Video_allOf_public_metrics:
      description: Engagement metrics for the Media at the time of the request.
      properties:
        view_count:
          description: Number of times this video has been viewed.
          format: int32
          type: integer
      type: object
    Video_allOf_non_public_metrics:
      description: Nonpublic engagement metrics for the Media at the time of the request.
      properties:
        playback_0_count:
          description: Number of users who made it through 0% of the video.
          format: int32
          type: integer
        playback_25_count:
          description: Number of users who made it through 25% of the video.
          format: int32
          type: integer
        playback_50_count:
          description: Number of users who made it through 50% of the video.
          format: int32
          type: integer
        playback_75_count:
          description: Number of users who made it through 75% of the video.
          format: int32
          type: integer
        playback_100_count:
          description: Number of users who made it through 100% of the video.
          format: int32
          type: integer
      type: object
    Video_allOf_organic_metrics:
      description: Organic nonpublic engagement metrics for the Media at the time
        of the request.
      properties:
        playback_0_count:
          description: Number of users who made it through 0% of the video.
          format: int32
          type: integer
        playback_25_count:
          description: Number of users who made it through 25% of the video.
          format: int32
          type: integer
        playback_50_count:
          description: Number of users who made it through 50% of the video.
          format: int32
          type: integer
        playback_75_count:
          description: Number of users who made it through 75% of the video.
          format: int32
          type: integer
        playback_100_count:
          description: Number of users who made it through 100% of the video.
          format: int32
          type: integer
        view_count:
          description: Number of times this video has been viewed.
          format: int32
          type: integer
      type: object
    Video_allOf_promoted_metrics:
      description: Promoted nonpublic engagement metrics for the Media at the time
        of the request.
      properties:
        playback_0_count:
          description: Number of users who made it through 0% of the video.
          format: int32
          type: integer
        playback_25_count:
          description: Number of users who made it through 25% of the video.
          format: int32
          type: integer
        playback_50_count:
          description: Number of users who made it through 50% of the video.
          format: int32
          type: integer
        playback_75_count:
          description: Number of users who made it through 75% of the video.
          format: int32
          type: integer
        playback_100_count:
          description: Number of users who made it through 100% of the video.
          format: int32
          type: integer
        view_count:
          description: Number of times this video has been viewed.
          format: int32
          type: integer
      type: object
    Video_allOf:
      properties:
        preview_image_url:
          format: uri
          type: string
        duration_ms:
          type: integer
        public_metrics:
          $ref: '#/components/schemas/Video_allOf_public_metrics'
        non_public_metrics:
          $ref: '#/components/schemas/Video_allOf_non_public_metrics'
        organic_metrics:
          $ref: '#/components/schemas/Video_allOf_organic_metrics'
        promoted_metrics:
          $ref: '#/components/schemas/Video_allOf_promoted_metrics'
      type: object
    AnimatedGif_allOf:
      properties:
        preview_image_url:
          format: uri
          type: string
      type: object
    GenericProblem_allOf:
      properties:
        status:
          type: integer
      required:
      - status
      type: object
    InvalidRequestProblem_allOf_errors:
      properties:
        parameters:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        message:
          type: string
      type: object
    InvalidRequestProblem_allOf:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/InvalidRequestProblem_allOf_errors'
          type: array
      type: object
    ResourceNotFoundProblem_allOf:
      properties:
        parameter:
          minLength: 1
          type: string
        value:
          description: Value will match the schema of the field.
        resource_id:
          type: string
        resource_type:
          enum:
          - user
          - tweet
          - media
          type: string
      required:
      - parameter
      - resource_id
      - resource_type
      - value
    ResourceUnauthorizedProblem_allOf:
      properties:
        value:
          type: string
        parameter:
          type: string
        section:
          enum:
          - data
          - includes
          type: string
        resource_id:
          type: string
        resource_type:
          enum:
          - tweet
          - user
          - media
          type: string
      required:
      - parameter
      - resource_id
      - resource_type
      - section
      - value
      type: object
    ResourceUnavailableProblem_allOf:
      properties:
        parameter:
          minLength: 1
          type: string
        resource_id:
          type: string
        resource_type:
          enum:
          - user
          - tweet
          - media
          type: string
      required:
      - parameter
      - resource_id
      - resource_type
    FieldUnauthorizedProblem_allOf:
      properties:
        section:
          enum:
          - data
          - includes
          type: string
        resource_type:
          enum:
          - tweet
          - media
          type: string
        field:
          type: string
      required:
      - field
      - resource_type
      - section
      type: object
    ClientForbiddenProblem_allOf:
      properties:
        reason:
          enum:
          - official-client-forbidden
          - client-not-enrolled
          type: string
        registration_url:
          format: uri
          type: string
      type: object
    DisallowedResourceProblem_allOf:
      properties:
        resource_id:
          type: string
        resource_type:
          enum:
          - tweet
          - media
          type: string
        section:
          enum:
          - data
          - includes
          type: string
      required:
      - resource_id
      - resource_type
      - section
      type: object
    UsageCapExceededProblem_allOf:
      properties:
        period:
          enum:
          - Daily
          - Monthly
          type: string
        scope:
          enum:
          - Account
          - Product
          type: string
      type: object
    ConnectionExceptionProblem_allOf:
      properties:
        connection_issue:
          enum:
          - TooManyConnections
          - ProvisioningSubscription
          - RuleConfigurationIssue
          - RulesInvalidIssue
          type: string
    OperationalDisconnectProblem_allOf:
      properties:
        disconnect_type:
          enum:
          - OperationalDisconnect
          - UpstreamOperationalDisconnect
          - ForceDisconnect
          - UpstreamUncleanDisconnect
          - SlowReader
          - InternalError
          - ClientApplicationStateDegraded
          - InvalidRules
          type: string
    TweetSearchResponse_meta:
      example:
        oldest_id: oldest_id
        newest_id: newest_id
        next_token: next_token
        result_count: 0
      properties:
        newest_id:
          description: Most recent Tweet Id returned by search query
          pattern: ^[0-9]{1,19}$
          type: string
        oldest_id:
          description: Oldest Tweet Id returned by search query
          pattern: ^[0-9]{1,19}$
          type: string
        next_token:
          description: This value is used to get the next 'page' of results by providing
            it to the next_token parameter.
          type: string
        result_count:
          description: Number of search query results
          format: int32
          type: integer
      type: object
    StreamingTweet_oneOf:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Problem'
          type: array
      required:
      - errors
      type: object
    FilteredStreamingTweet_oneOf_matching_rules:
      properties:
        id:
          description: Unique identifier of this rule.
          example: "120897978112909812"
          pattern: ^[0-9]{1,19}$
          type: string
        tag:
          description: The user-supplied tag assigned to the rule which matched
          type: string
      required:
      - id
      type: object
    FilteredStreamingTweet_oneOf:
      description: The values returned with a successful streamed tweet. Includes
        the user provided rules that the tweet matched.
      properties:
        data:
          $ref: '#/components/schemas/Tweet'
        matching_rules:
          description: The list of rules which matched the tweet
          items:
            $ref: '#/components/schemas/FilteredStreamingTweet_oneOf_matching_rules'
          type: array
        includes:
          $ref: '#/components/schemas/Expansions'
      required:
      - data
      - matching_rules
      type: object
    RulesRequestSummary_oneOf:
      description: A summary of the results of the addition of user-specified stream
        filtering rules.
      properties:
        created:
          description: Number of user-specified stream filtering rules that were created.
          example: 1
          format: int32
          type: integer
        not_created:
          description: Number of user-specified stream filtering rules that were not
            created.
          example: 1
          format: int32
          type: integer
        valid:
          description: Number of valid user-specified stream filtering rules.
          example: 1
          format: int32
          type: integer
        invalid:
          description: Number of invalid user-specified stream filtering rules.
          example: 1
          format: int32
          type: integer
      required:
      - created
      - invalid
      - not_created
      - valid
      type: object
    RulesRequestSummary_oneOf_1:
      properties:
        deleted:
          description: Number of user-specified stream filtering rules that were deleted.
          format: int32
          type: integer
        not_deleted:
          description: Number of user-specified stream filtering rules that were not
            deleted.
          format: int32
          type: integer
      required:
      - deleted
      - not_deleted
      type: object
    DeleteRulesRequest_delete:
      description: IDs and values of all deleted user-specified stream filtering rules.
      properties:
        ids:
          description: IDs of all deleted user-specified stream filtering rules.
          items:
            $ref: '#/components/schemas/RuleId'
          type: array
        values:
          description: Values of all deleted user-specified stream filtering rules.
          items:
            $ref: '#/components/schemas/RuleValue'
          type: array
      type: object
    GenericTweetsTimelineResponse_meta:
      example:
        oldest_id: "1346889436626259968"
        previous_token: previous_token
        newest_id: "1346889436626259968"
        next_token: next_token
        result_count: 0
      properties:
        newest_id:
          description: Unique identifier of this Tweet. This is returned as a string
            in order to avoid complications with languages and tools that cannot handle
            large integers.
          example: "1346889436626259968"
          pattern: ^[0-9]{1,19}$
          type: string
        oldest_id:
          description: Unique identifier of this Tweet. This is returned as a string
            in order to avoid complications with languages and tools that cannot handle
            large integers.
          example: "1346889436626259968"
          pattern: ^[0-9]{1,19}$
          type: string
        previous_token:
          description: The previous token
          pattern: ^[a-zA-Z0-9]+$
          type: string
        next_token:
          description: The next token
          pattern: ^[a-zA-Z0-9]+$
          type: string
        result_count:
          description: Number of Tweets in result set
          format: int32
          type: integer
      type: object
    UsersBlockingMutationResponse_data:
      example:
        blocking: true
      properties:
        blocking:
          type: boolean
      type: object
    GenericMultipleUsersLookupResponse_meta:
      example:
        previous_token: previous_token
        next_token: next_token
        result_count: 0
      properties:
        previous_token:
          description: The previous token
          pattern: ^[a-zA-Z0-9]+$
          type: string
        next_token:
          description: The next token
          pattern: ^[a-zA-Z0-9]+$
          type: string
        result_count:
          description: The number of user results returned in this response
          type: integer
      type: object
    ListLookupMultipleUsersLookupResponse_meta:
      example:
        previous_token: previous_token
        next_token: next_token
        result_count: 0
      properties:
        previous_token:
          description: The previous token
          pattern: ^-?[0-9]{1,19}$
          type: string
        next_token:
          description: The next token
          pattern: ^-?[0-9]{1,19}$
          type: string
        result_count:
          description: The number of user results returned in this response
          type: integer
      type: object
    UsersMutingMutationResponse_data:
      example:
        muting: true
      properties:
        muting:
          type: boolean
      type: object
    UsersFollowingCreateResponse_data:
      example:
        following: true
        pending_follow: true
      properties:
        following:
          type: boolean
        pending_follow:
          type: boolean
      type: object
    UsersLikesCreateResponse_data:
      example:
        liked: true
      properties:
        liked:
          type: boolean
      type: object
    UsersRetweetsCreateResponse_data:
      example:
        retweeted: true
      properties:
        retweeted:
          type: boolean
      type: object
    TweetCountsResponse_meta:
      example:
        total_tweet_count: 6
        next_token: next_token
      properties:
        next_token:
          description: This value is used to get the next 'page' of results by providing
            it to the next_token parameter.
          type: string
        total_tweet_count:
          description: Sum of search query count results
          format: int32
          type: integer
      type: object
    Space_topics:
      description: The Twitter Topic object
      example:
        id: "848920371311001600"
        description: All about technology
        name: Technology
      properties:
        id:
          description: An ID suitable for use in the REST API.
          type: string
        description:
          description: The description of the given topic.
          type: string
        name:
          description: The name of the given topic.
          type: string
      required:
      - id
      - name
      type: object
  securitySchemes:
    BearerToken:
      scheme: bearer
      type: http
    UserToken:
      scheme: OAuth
      type: http

