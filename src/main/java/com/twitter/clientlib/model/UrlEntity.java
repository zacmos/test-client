/*
 * Copyright 2020 Twitter, Inc.
 * SPDX-License-Identifier: Apache-2.0
 *
 * Twitter API v2
 * Twitter API v2 available endpoints
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.twitter.clientlib.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.twitter.clientlib.model.EntityIndicesInclusiveExclusive;
import com.twitter.clientlib.model.URLFields;
import com.twitter.clientlib.model.URLImage;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

/**
 * Represent the portion of text recognized as a URL, and its start and end position within the text.
 */
@ApiModel(description = "Represent the portion of text recognized as a URL, and its start and end position within the text.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UrlEntity {
  public static final String SERIALIZED_NAME_START = "start";
  @SerializedName(SERIALIZED_NAME_START)
  private Integer start;

  public static final String SERIALIZED_NAME_END = "end";
  @SerializedName(SERIALIZED_NAME_END)
  private Integer end;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_EXPANDED_URL = "expanded_url";
  @SerializedName(SERIALIZED_NAME_EXPANDED_URL)
  private URI expandedUrl;

  public static final String SERIALIZED_NAME_DISPLAY_URL = "display_url";
  @SerializedName(SERIALIZED_NAME_DISPLAY_URL)
  private String displayUrl;

  public static final String SERIALIZED_NAME_UNWOUND_URL = "unwound_url";
  @SerializedName(SERIALIZED_NAME_UNWOUND_URL)
  private URI unwoundUrl;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Integer status;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_IMAGES = "images";
  @SerializedName(SERIALIZED_NAME_IMAGES)
  private List<URLImage> images = null;

  public UrlEntity() { 
  }

  public UrlEntity start(Integer start) {
    
    this.start = start;
    return this;
  }

   /**
   * Index (zero-based) at which position this entity starts.  The index is inclusive.
   * minimum: 0
   * @return start
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "50", required = true, value = "Index (zero-based) at which position this entity starts.  The index is inclusive.")

  public Integer getStart() {
    return start;
  }


  public void setStart(Integer start) {
    this.start = start;
  }


  public UrlEntity end(Integer end) {
    
    this.end = end;
    return this;
  }

   /**
   * Index (zero-based) at which position this entity ends.  The index is exclusive.
   * minimum: 0
   * @return end
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "61", required = true, value = "Index (zero-based) at which position this entity ends.  The index is exclusive.")

  public Integer getEnd() {
    return end;
  }


  public void setEnd(Integer end) {
    this.end = end;
  }


  public UrlEntity url(URI url) {
    
    this.url = url;
    return this;
  }

   /**
   * A validly formatted URL.
   * @return url
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "https://developer.twitter.com/en/docs/twitter-api", required = true, value = "A validly formatted URL.")

  public URI getUrl() {
    return url;
  }


  public void setUrl(URI url) {
    this.url = url;
  }


  public UrlEntity expandedUrl(URI expandedUrl) {
    
    this.expandedUrl = expandedUrl;
    return this;
  }

   /**
   * A validly formatted URL.
   * @return expandedUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://developer.twitter.com/en/docs/twitter-api", value = "A validly formatted URL.")

  public URI getExpandedUrl() {
    return expandedUrl;
  }


  public void setExpandedUrl(URI expandedUrl) {
    this.expandedUrl = expandedUrl;
  }


  public UrlEntity displayUrl(String displayUrl) {
    
    this.displayUrl = displayUrl;
    return this;
  }

   /**
   * The URL as displayed in the Twitter client.
   * @return displayUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "twittercommunity.com/t/introducing-â€¦", value = "The URL as displayed in the Twitter client.")

  public String getDisplayUrl() {
    return displayUrl;
  }


  public void setDisplayUrl(String displayUrl) {
    this.displayUrl = displayUrl;
  }


  public UrlEntity unwoundUrl(URI unwoundUrl) {
    
    this.unwoundUrl = unwoundUrl;
    return this;
  }

   /**
   * Fully resolved url
   * @return unwoundUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://twittercommunity.com/t/introducing-the-v2-follow-lookup-endpoints/147118", value = "Fully resolved url")

  public URI getUnwoundUrl() {
    return unwoundUrl;
  }


  public void setUnwoundUrl(URI unwoundUrl) {
    this.unwoundUrl = unwoundUrl;
  }


  public UrlEntity status(Integer status) {
    
    this.status = status;
    return this;
  }

   /**
   * HTTP Status Code.
   * minimum: 100
   * maximum: 599
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "HTTP Status Code.")

  public Integer getStatus() {
    return status;
  }


  public void setStatus(Integer status) {
    this.status = status;
  }


  public UrlEntity title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Title of the page the URL points to.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Introducing the v2 follow lookup endpoints", value = "Title of the page the URL points to.")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public UrlEntity description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of the URL landing page.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "This is a description of the website.", value = "Description of the URL landing page.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public UrlEntity images(List<URLImage> images) {
    
    this.images = images;
    return this;
  }

  public UrlEntity addImagesItem(URLImage imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * Get images
   * @return images
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<URLImage> getImages() {
    return images;
  }


  public void setImages(List<URLImage> images) {
    this.images = images;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UrlEntity urlEntity = (UrlEntity) o;
    return Objects.equals(this.start, urlEntity.start) &&
        Objects.equals(this.end, urlEntity.end) &&
        Objects.equals(this.url, urlEntity.url) &&
        Objects.equals(this.expandedUrl, urlEntity.expandedUrl) &&
        Objects.equals(this.displayUrl, urlEntity.displayUrl) &&
        Objects.equals(this.unwoundUrl, urlEntity.unwoundUrl) &&
        Objects.equals(this.status, urlEntity.status) &&
        Objects.equals(this.title, urlEntity.title) &&
        Objects.equals(this.description, urlEntity.description) &&
        Objects.equals(this.images, urlEntity.images);
  }

  @Override
  public int hashCode() {
    return Objects.hash(start, end, url, expandedUrl, displayUrl, unwoundUrl, status, title, description, images);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UrlEntity {\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    expandedUrl: ").append(toIndentedString(expandedUrl)).append("\n");
    sb.append("    displayUrl: ").append(toIndentedString(displayUrl)).append("\n");
    sb.append("    unwoundUrl: ").append(toIndentedString(unwoundUrl)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("start");
    openapiFields.add("end");
    openapiFields.add("url");
    openapiFields.add("expanded_url");
    openapiFields.add("display_url");
    openapiFields.add("unwound_url");
    openapiFields.add("status");
    openapiFields.add("title");
    openapiFields.add("description");
    openapiFields.add("images");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("start");
    openapiRequiredFields.add("end");
    openapiRequiredFields.add("url");
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UrlEntity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UrlEntity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UrlEntity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UrlEntity.class));

       return (TypeAdapter<T>) new TypeAdapter<UrlEntity>() {
           @Override
           public void write(JsonWriter out, UrlEntity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UrlEntity read(JsonReader in) throws IOException {
             JsonObject obj = elementAdapter.read(in).getAsJsonObject();
             Set<Entry<String, JsonElement>> entries = obj.entrySet();//will return members of your object
             // check to see if the JSON string contains additional fields
             for (Entry<String, JsonElement> entry: entries) {
               if (!UrlEntity.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException("The field `" + entry.getKey() + "` in the JSON string is not defined in the `UrlEntity` properties");
               }
             }

             // check to make sure all required properties/fields are present in the JSON string
             for (String requiredField : UrlEntity.openapiRequiredFields) {
               if (obj.get(requiredField) == null) {
                 throw new IllegalArgumentException("The required field `" + requiredField + "` is not found in the JSON string");
               }
             }

             return thisAdapter.fromJsonTree(obj);
           }

       }.nullSafe();
    }
  }
}
